{"name":"PBIDashboards::BodyMap_TOP1","category":"view","description":"MRN and completion datetime of most recent BodyMap per MRN (DEPRECATED) (10-12-2020)","metaData":"{\r\n    \"parameters\": [\r\n        {\r\n            \"name\": \"last_x_days\",\r\n            \"description\": \"The last X days to show, or 30 if null\",\r\n            \"type\": \"string\"\r\n        },\r\n        {\r\n            \"name\": \"return_variables\",\r\n            \"description\": \"Returns an objects of all the variables in ctx.vars (including this one) and passed to AQL. Useful for debugging.\",\r\n            \"type\": \"boolean\"\r\n        }\r\n    ]\r\n}","steps":[{"processorName":"js","processorData":"// DEPRECATED, SEE PBIDashboards::BodyMap\r\n\r\nvar fromDate = \"<replace_date>\";\r\nvar cuid = \"<replace_cuid>\";\r\nvar formName = \"Body Map\";\r\nvar tst_debug = false;\r\n\r\nvar completed_bodymaps = \"SELECT c/uid/value as cuid, \" +\r\n       \"c/context/start_time/value as completed, \" +\r\n       \"e/ehr_status/subject/external_ref/id/value as mrn \" +\r\n\"FROM EHR e  \" +\r\n\"CONTAINS TOP 1 COMPOSITION c[openEHR-EHR-COMPOSITION.encounter.v1]   \" +\r\n\"WHERE c/name/value = '\" + formName + \"' \" + \r\n\"AND completed > '\" + fromDate + \"' \" +\r\n\"ORDER BY c/context/start_time/value DESC \" + \r\n\"LIMIT 1000\";\r\n\r\nvar get_comment_count = \"SELECT COUNT(j/items[at0009]/items[at0002]/value) as comment_count \" +\r\n\"FROM EHR e \" +\r\n\"CONTAINS TOP 1 COMPOSITION c[openEHR-EHR-COMPOSITION.encounter.v1] \" +\r\n\"CONTAINS CLUSTER j[openEHR-EHR-CLUSTER.body_part_observation.v0] \" +\r\n\"WHERE c/uid/value = '\" + cuid + \"';\";\r\n\r\nfunction build_cuid_query(new_cuid) {\r\n\treturn {\r\n\t\tforms: Ehr.query({\r\n\t\t\taql: get_comment_count.replace(cuid, new_cuid),\r\n\t\t\tparams: {},\r\n\t\t\tinitvalue: [],\r\n\t\t\tcallback: function (out, form) {\r\n\t\t\t\tif(form) {\r\n\t\t\t\t\tout.push({\r\n\t\t\t\t\t\t\"count\": form.comment_count == null ? 0 : form.comment_count\r\n\t\t\t\t\t});\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction compute(ctx, src) {\r\n\ttst_debug = ctx.vars.return_variables == null ? false : ctx.vars.return_variables;\r\n\t\r\n\t\r\n\tvar x = ctx.vars.last_x_days;\r\n\tif(!x || x == \"\") {\r\n\t\tx = ctx.vars.last_x_days = 30;\r\n\t}\r\n\r\n\tvar d = new Date();\r\n\tvar theLongLongAgo = new Date(d.setDate(d.getDate() - x));\r\n\tctx.vars.from_date = theLongLongAgo.toISOString();\r\n\t\r\n\tvar bm_query = completed_bodymaps.replace(fromDate, ctx.vars.from_date);\r\n\t\r\n\tvar bodymaps = {\r\n        forms: Ehr.query({\r\n\t\t\taql: bm_query,\r\n\t\t\tparams: ctx.vars,\r\n\t\t\tinitvalue: [],\r\n\t\t\tcallback: function (out, form) {\r\n\t\t\t\tif(form) {\r\n\t\t\t\t\tout.push({\r\n\t\t\t\t\t\t\"form_name\": formName,\r\n\t\t\t\t\t\t\"form_id\": form.cuid,\r\n\t\t\t\t\t\t\"recorded_date\": form.completed,\r\n\t\t\t\t\t\t\"patient_mrn\": form.mrn\r\n\t\t\t\t\t});\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t})\r\n\t};\r\n\r\n    var result = {};\r\n\tEhr.allhash(bodymaps, function (res) {\r\n\t\tresult = res['forms'];\r\n\t\tif(tst_debug) {\r\n\t\t\tresult.params = {\r\n\t\t\t\t\"params\": ctx.vars\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\t\r\n\tfor(var i = 0; i < result.length; i++) {\t\r\n\t\tEhr.allhash(build_cuid_query(result[i].form_id), function (res) {\r\n\t\t\tvar f = res['forms'];\r\n\t\t\t// result[i].query = build_cuid_query(result[i].form_id);\r\n\t\t\tif(f && f.length > 0) {\r\n\t\t\t\t// result[i].comment = f;\r\n\t\t\t\t// result[i].comment_length = f.length;\r\n\t\t\t\tresult[i].comment_sum = f[0].count;\r\n\t\t\t} else {\r\n\t\t\t\tresult[i].comment = f;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n    return result;\r\n}\r\n"}]}