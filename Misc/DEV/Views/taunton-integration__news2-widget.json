{"name":"taunton-integration::news2-widget","category":"view","description":"NEWS2 UK Widget","metaData":"{\r\n    \"parameters\": [\r\n        {\r\n            \"name\": \"ehrId\",\r\n            \"description\": \"Ehr id\",\r\n            \"type\": \"string\"\r\n        },\r\n        {\r\n            \"name\": \"dateFrom\",\r\n            \"description\": \"Date from\",\r\n            \"type\": \"string\"\r\n        },\r\n        {\r\n            \"name\": \"dateTo\",\r\n            \"description\": \"Date to\",\r\n            \"type\": \"string\"\r\n        }\r\n    ]\r\n}","steps":[{"processorName":"js","processorData":"// Taunton Integration NEWS2 Widget View v1.1.0\r\n// Template required: \"NHS Somerset - eObservations & NEWS2\" v1.0.0\r\n// Authors: Tomaz Kenda (tomaz.kenda@better.care), Vanessa Pereira (vanessa.pereira@better.care)\r\n\r\nfunction compute(ctx, src)\r\n{\r\n    var promises = {\r\n        newsAssessment: Ehr.query({\r\n            aql: \"SELECT \\n\" +\r\n            \" \\n\" +\r\n            \"---OBSERVATIONS \\n\" +\r\n            \"a_a/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/magnitude as respirationRateValue, \\n\" +\r\n            \"a_a/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/units as respirationRateUnits, \\n\" +\r\n            \"a_a/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/normal_status/code_string as respirationRateValueStatus, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 1']/data[at0003]/items[at0006, 'SpO₂ Scale 1']/value/numerator as spo2Scale1Value, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 1']/data[at0003]/items[at0006, 'SpO₂ Scale 1']/value/normal_status/code_string as spo2Scale1ValueStatus, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 1']/state[at0014]/items[openEHR-EHR-CLUSTER.inspired_oxygen.v1]/items[openEHR-EHR-CLUSTER.device.v1]/items[at0001, 'Device']/value/value as inspiredOxygenDeviceScale1, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 1']/state[at0014]/items[openEHR-EHR-CLUSTER.inspired_oxygen.v1]/items[at0051]/value/magnitude as flowRateScale1Value, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 1']/state[at0014]/items[openEHR-EHR-CLUSTER.inspired_oxygen.v1]/items[at0051]/value/normal_status/code_string as flowRateScale1ValueStatus, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 1']/state[at0014]/items[openEHR-EHR-CLUSTER.inspired_oxygen.v1]/items[at0051]/value/units as flowRateScale1Units, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 1']/state[at0014]/items[openEHR-EHR-CLUSTER.inspired_oxygen.v1]/items[at0053]/value/numerator as O2percentScale1Value, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 1']/state[at0014]/items[openEHR-EHR-CLUSTER.inspired_oxygen.v1]/items[at0053]/value/normal_status/code_string as O2percentScale1ValueStatus, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 2']/data[at0003]/items[at0006, 'SpO₂ Scale 2']/value/numerator as spo2Scale2Value, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 2']/data[at0003]/items[at0006, 'SpO₂ Scale 2']/value/normal_status/code_string as spo2Scale2ValueStatus, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 2']/state[at0014]/items[openEHR-EHR-CLUSTER.inspired_oxygen.v1]/items[openEHR-EHR-CLUSTER.device.v1]/items[at0001, 'Device']/value/value as inspiredOxygenDeviceScale2, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 2']/state[at0014]/items[openEHR-EHR-CLUSTER.inspired_oxygen.v1]/items[at0051]/value/magnitude as flowRateScale2Value, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 2']/state[at0014]/items[openEHR-EHR-CLUSTER.inspired_oxygen.v1]/items[at0051]/value/units as flowRateScale2Units, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 2']/state[at0014]/items[openEHR-EHR-CLUSTER.inspired_oxygen.v1]/items[at0051]/value/normal_status/code_string as flowRateScale2ValueStatus, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 2']/state[at0014]/items[openEHR-EHR-CLUSTER.inspired_oxygen.v1]/items[at0053]/value/numerator as O2percentScale2Value, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 2']/state[at0014]/items[openEHR-EHR-CLUSTER.inspired_oxygen.v1]/items[at0053]/value/normal_status/code_string as O2percentScale2ValueStatus, \\n\" +\r\n            \"a_c/data[at0002]/events[at0003]/data[at0001]/items[at0004]/value/magnitude as heartRateValue, \\n\" +\r\n            \"a_c/data[at0002]/events[at0003]/data[at0001]/items[at0004]/value/units as heartRateUnits, \\n\" +\r\n            \"a_c/data[at0002]/events[at0003]/data[at0001]/items[at0004]/value/normal_status/code_string as heartRateValueStatus, \\n\" +\r\n            \"a_c/data[at0002]/events[at0003]/data[at0001]/items[at0005]/value/value as heartRateRegularity, \\n\" +\r\n            \"a_c/protocol[at0010]/items[at1037]/value/value as heartRateBodySiteMeasurement, \\n\" +\r\n            \"a_d/data[at0002]/events[at0003]/data[at0001]/items[at0004]/value/magnitude as bodyTemperatureValue, \\n\" +\r\n            \"a_d/data[at0002]/events[at0003]/data[at0001]/items[at0004]/value/units as bodyTemperatureUnits, \\n\" +\r\n            \"a_d/data[at0002]/events[at0003]/data[at0001]/items[at0004]/value/normal_status/code_string as bodyTemperatureValueStatus, \\n\" +\r\n            \"a_d/protocol[at0020]/items[at0021]/value/value as bodyTemperatureLocation, \\n\" +\r\n            \"-- a_e/data[at0001]/events[at0006]/data[at0003]/items[at0004]/value/magnitude as bloodPressureSystolicValue, \\n\" +\r\n            \"-- a_e/data[at0001]/events[at0006]/data[at0003]/items[at0004]/value/units as bloodPressureSystolicUnits, \\n\" +\r\n            \"-- a_e/data[at0001]/events[at0006]/data[at0003]/items[at0004]/value/normal_status/code_string as bloodPressureSystolicValueStatus, \\n\" +\r\n            \"-- a_e/data[at0001]/events[at0006]/data[at0003]/items[at0005]/value/magnitude as bloodPressureDiastolic, \\n\" +\r\n            \"-- a_e/data[at0001]/events[at0006]/data[at0003]/items[at0005]/value/units as bloodPressureUnits, \\n\" +\r\n            \"-- a_e/data[at0001]/events[at0006]/data[at0003]/items[at0005]/value/normal_status/code_string as bloodPressureDiastolicStatus, \\n\" +\r\n            \"-- a_e/data[at0001]/events[at0006]/state[at0007]/items[at0008]/value/value as bloodPressurePosition, \\n\" +\r\n            \"a_f/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/value as ACVPUscale, \\n\" +\r\n            \" \\n\" +\r\n            \"---NEWS2_SCORING \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0006]/value/value as NEWS2RespirationRateValue, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0029]/value/value as NEWS2Spo2Scale1Value, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0047]/value/value as NEWS2Spo2Scale2Value, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0034]/value/value as NEWS2AirOrOxygenValue, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0034]/value/normal_status/code_string as NEWS2AirOrOxygenValueStatus, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/value as NEWS2BPSystolicValue, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0005]/value/value as NEWS2PulseValue, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0008]/value/value as NEWS2ConsciousnessValue, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0008]/value/normal_status/code_string as NEWS2ConsciousnessValueStatus, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0007]/value/value as NEWS2TemperatureValue, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0028]/value/magnitude as NEWS2Score, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0028]/value/normal_status/code_string as NEWS2ScoreStatus, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0056]/value/value as NEWS2ScoreCategory, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0056]/value/defining_code/code_string as NEWS2ScoreCategoryCode, \\n\" +\r\n            \"a_h/items[at0002]/value/value as NEWS2AlertSeverity, \\n\" +\r\n            \"a_i/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/value as balanceFluidChart, \\n\" +\r\n            \"a_j/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/magnitude as painMovementScore, \\n\" +\r\n            \"a_j/data[at0001]/events[at0002]/data[at0003]/items[at0006]/value/value as painMovementScoreInterpretation, \\n\" +\r\n            \"a_j/data[at0001]/events[at0002]/data[at0003]/items[at0006]/value/defining_code/code_string as painMovementScoreInterpretationCode, \\n\" +\r\n            \"a_k/data[at0001]/items[at0002]/value/value as NEWS2SynopysOverallComment, \\n\" +\r\n            \"---REFERENCE_RANGES \\n\"+\r\n            \"a_a/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/other_reference_ranges/meaning/value as respirationRateValue_ReferenceRangeMeaning, \\n\" +\r\n            \"a_a/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/other_reference_ranges/range/lower/magnitude as respirationRateValue_ReferenceRangeLowerValue, \\n\" +\r\n            \"a_a/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/other_reference_ranges/range/upper/magnitude as respirationRateValue_ReferenceRangeUpperValue, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 1']/data[at0003]/items[at0006, 'SpO₂ Scale 1']/value/other_reference_ranges/meaning/value as spo2Scale1Value_ReferenceRangeMeaning, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 1']/data[at0003]/items[at0006, 'SpO₂ Scale 1']/value/other_reference_ranges/range/lower/denominator as spo2Scale1Value_ReferenceRangeLowerDenominator, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 1']/data[at0003]/items[at0006, 'SpO₂ Scale 1']/value/other_reference_ranges/range/lower/numerator as spo2Scale1Value_ReferenceRangeLowerNumerator, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 1']/data[at0003]/items[at0006, 'SpO₂ Scale 1']/value/other_reference_ranges/range/upper/denominator as spo2Scale1Value_ReferenceRangeUpperDenominator, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 1']/data[at0003]/items[at0006, 'SpO₂ Scale 1']/value/other_reference_ranges/range/upper/numerator as spo2Scale1Value_ReferenceRangeUpperNumerator, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 2']/data[at0003]/items[at0006, 'SpO₂ Scale 2']/value/other_reference_ranges/meaning as spo2Scale2Value_ReferenceRangeMeaning, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 2']/data[at0003]/items[at0006, 'SpO₂ Scale 2']/value/other_reference_ranges/range/lower/denominator as spo2Scale2Value_ReferenceRangeLowerDenominator, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 2']/data[at0003]/items[at0006, 'SpO₂ Scale 2']/value/other_reference_ranges/range/lower/numerator as spo2Scale2Value_ReferenceRangeLowerNumerator, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 2']/data[at0003]/items[at0006, 'SpO₂ Scale 2']/value/other_reference_ranges/range/upper/denominator as spo2Scale2Value_ReferenceRangeUpperDenominator, \\n\" +\r\n            \"a_b/data[at0001]/events[at0002, 'Scale 2']/data[at0003]/items[at0006, 'SpO₂ Scale 2']/value/other_reference_ranges/range/upper/numerator as spo2Scale2Value_ReferenceRangeUpperNumerator, \\n\" +\r\n            \"a_c/data[at0002]/events[at0003]/data[at0001]/items[at0004]/value/other_reference_ranges/meaning/value as heartRateValue_ReferenceRangeMeaning, \\n\" +\r\n            \"a_c/data[at0002]/events[at0003]/data[at0001]/items[at0004]/value/other_reference_ranges/range/lower/magnitude as heartRateValue_ReferenceRangeLowerValue, \\n\" +\r\n            \"a_c/data[at0002]/events[at0003]/data[at0001]/items[at0004]/value/other_reference_ranges/range/upper/magnitude as heartRateValue_ReferenceRangeUpperValue, \\n\" +\r\n            \"a_d/data[at0002]/events[at0003]/data[at0001]/items[at0004]/value/other_reference_ranges/meaning/value as bodyTemperatureValue_ReferenceRangeMeaning, \\n\" +\r\n            \"a_d/data[at0002]/events[at0003]/data[at0001]/items[at0004]/value/other_reference_ranges/range/upper/magnitude as bodyTemperatureValue_ReferenceRangeLowerValue, \\n\" +\r\n            \"a_d/data[at0002]/events[at0003]/data[at0001]/items[at0004]/value/other_reference_ranges/range/lower/magnitude as bodyTemperatureValue_ReferenceRangeUpperValue, \\n\" +\r\n            \"-- a_e/data[at0001]/events[at0006]/data[at0003]/items[at0004]/value/other_reference_ranges/meaning/value as bloodPressureSystolicValue_ReferenceRangeMeaning, \\n\" +\r\n            \"-- a_e/data[at0001]/events[at0006]/data[at0003]/items[at0004]/value/other_reference_ranges/range/lower/magnitude as bloodPressureSystolicValue_ReferenceRangeLowerValue, \\n\" +\r\n            \"-- a_e/data[at0001]/events[at0006]/data[at0003]/items[at0004]/value/other_reference_ranges/range/upper/magnitude as bloodPressureSystolicValue_ReferenceRangeUpperValue, \\n\" +\r\n            \"-- a_e/data[at0001]/events[at0006]/data[at0003]/items[at0005]/value/other_reference_ranges/meaning/value as bloodPressureDiastolicValue_ReferenceRangeMeaning, \\n\" +\r\n            \"-- a_e/data[at0001]/events[at0006]/data[at0003]/items[at0005]/value/other_reference_ranges/range/lower/magnitude as bloodPressureDiastolicValue_ReferenceRangeLowerValue, \\n\" +\r\n            \"-- a_e/data[at0001]/events[at0006]/data[at0003]/items[at0005]/value/other_reference_ranges/range/upper/magnitude as bloodPressureDiastolicValue_ReferenceRangeUpperValue, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0028]/value/other_reference_ranges/meaning/value as NEWS2Score_ReferenceRangeMeaning, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0028]/value/other_reference_ranges/range/lower/magnitude as NEWS2Score_ReferenceRangeLowerValue, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0028]/value/other_reference_ranges/range/upper/magnitude as NEWS2Score_ReferenceRangeUpperValue, \\n\" +\r\n            \"---REFERENCE_RANGES (NEWS2 SCORES) \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0006]/value/symbol/value as NEWS2respirationRateOrdinalText, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0029]/value/symbol/value as NEWS2spo2Scale1OrdinalText, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0047]/value/symbol/value as NEWS2spo2Scale2OrdinalText, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0034]/value/symbol/value as NEWS2AirOrOxygenOrdinalText, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/symbol/value as NEWS2BPSystolicOrdinalText, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0005]/value/symbol/value as NEWS2PulseOrdinalText, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0008]/value/symbol/value as NEWS2ConsciousnessOrdinalText, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0007]/value/symbol/value as NEWS2TemperatureOrdinalText, \\n\" +\r\n            \" \\n\" +\r\n            \"---CONTEXT \\n\" +\r\n            \"a/name/value as templateName, \\n\" +\r\n            \"a/archetype_details/template_id/value as templateId, \\n\" +\r\n            \"a/uid/value as compositionUid, \\n\" +\r\n            \"a/context/start_time/value as dateCompositionSubmitted, \\n\" +\r\n            \"a/composer/name as composer, \\n\" +\r\n            \"tags(a, 'messageStatus') as tags \\n\" +\r\n            \" \\n\" +\r\n            \"FROM EHR e [ehr_id/value=:ehrId]\\n\" +\r\n            \"CONTAINS COMPOSITION a \\n\" +\r\n            \"CONTAINS ( \\n\" +\r\n            \"OBSERVATION a_a[openEHR-EHR-OBSERVATION.respiration.v1] OR \\n\" +\r\n            \"OBSERVATION a_b[openEHR-EHR-OBSERVATION.pulse_oximetry.v1] OR \\n\" +\r\n            \"OBSERVATION a_c[openEHR-EHR-OBSERVATION.pulse.v1] OR \\n\" +\r\n            \"OBSERVATION a_d[openEHR-EHR-OBSERVATION.body_temperature.v2] OR \\n\" +\r\n            \"-- OBSERVATION a_e[openEHR-EHR-OBSERVATION.blood_pressure.v2] OR \\n\" +\r\n            \"OBSERVATION a_f[openEHR-EHR-OBSERVATION.acvpu.v1] OR \\n\" +\r\n            \"OBSERVATION a_g[openEHR-EHR-OBSERVATION.news2.v1] OR \\n\" +\r\n            \"CLUSTER a_h[openEHR-EHR-CLUSTER.news2_extension_uk.v0] OR \\n\" +\r\n            \"OBSERVATION a_i[openEHR-EHR-OBSERVATION.fluid_balance_chart_checklist.v0] OR \\n\" +\r\n            \"OBSERVATION a_j[openEHR-EHR-OBSERVATION.movement_pain.v0] OR \\n\" +\r\n            \"EVALUATION a_k[openEHR-EHR-EVALUATION.clinical_synopsis.v1]) \\n\" +\r\n            \"WHERE \\n\" +\r\n            \"  templateId = 'NHS Somerset - eObservations & NEWS2' \\n\" +\r\n            (typeof (ctx.vars.dateFrom) === \"undefined\" || ctx.vars.dateFrom === null ?  '' : '    AND dateCompositionSubmitted >= :dateFrom') +\r\n            (typeof (ctx.vars.dateTo) === \"undefined\" || ctx.vars.dateTo === null ? '' : '    AND dateCompositionSubmitted <= :dateTo') +\r\n            \"\\n\"+\r\n            \"  -- AND bloodPressurePosition = 'Lying'  \\n\" +\r\n            \"  -- AND compositionUid = '9d6f602c-9809-4409-b726-624d200e09f4::default::1' -- Original one \\n\" +\r\n            \"  -- AND compositionUid = 'a9f0ebb5-f187-428c-8810-89842b37e758::default::1' -- With HR \\n\" +\r\n            \"  -- AND compositionUid = 'd0fc52bf-5747-43d5-925a-ba857a45c7fe::default::1' -- With reference ranges \\n\" +\r\n            \"  -- AND compositionUid = 'c50eccba-95d7-4518-8df9-6caa323c040a::default::1' -- From integration \\n\" +\r\n            \"  -- AND compositionUid = '6b09b5cf-4690-46a0-a62b-80a1c7c668ea::default::1' -- From integration 2 \\n\" +\r\n            \"  -- AND compositionUid = '?' -- Partial \\n\" +\r\n            \"  -- AND e/ehr_id/value = '' \\n\" +\r\n            \"ORDER BY dateCompositionSubmitted DESC \\n\" +\r\n            \"offset 0 limit 6\",\r\n            initvalue: [],\r\n            params: ctx.vars,\r\n            callback: function(out, result) {\r\n                out.push(result);\r\n            }\r\n        }),\r\n        bloodPressureLying: Ehr.query({\r\n            aql: \"SELECT \\n\" +\r\n            \" \\n\" +\r\n            \"---OBSERVATIONS \\n\" +\r\n            \r\n            \"a_e/data[at0001]/events[at0006]/data[at0003]/items[at0004]/value/magnitude as bloodPressureSystolicValue, \\n\" +\r\n            \"a_e/data[at0001]/events[at0006]/data[at0003]/items[at0004]/value/units as bloodPressureSystolicUnits, \\n\" +\r\n            \"a_e/data[at0001]/events[at0006]/data[at0003]/items[at0004]/value/normal_status/code_string as bloodPressureSystolicValueStatus, \\n\" +\r\n            \"a_e/data[at0001]/events[at0006]/data[at0003]/items[at0005]/value/magnitude as bloodPressureDiastolicValue, \\n\" +\r\n            \"a_e/data[at0001]/events[at0006]/data[at0003]/items[at0005]/value/units as bloodPressureUnits, \\n\" +\r\n            \"a_e/data[at0001]/events[at0006]/data[at0003]/items[at0005]/value/normal_status/code_string as bloodPressureDiastolicStatus, \\n\" +\r\n            \"a_e/data[at0001]/events[at0006]/state[at0007]/items[at0008]/value/value as bloodPressurePosition, \\n\" +\r\n            \r\n            \" \\n\" +\r\n            \"---NEWS2_SCORING \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0006]/value/value as NEWS2RespirationRateValue, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0029]/value/value as NEWS2Spo2Scale1Value, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0047]/value/value as NEWS2Spo2Scale2Value, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0034]/value/value as NEWS2AirOrOxygenValue, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0034]/value/normal_status/code_string as NEWS2AirOrOxygenValueStatus, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/value as NEWS2BPSystolicValue, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0005]/value/value as NEWS2PulseValue, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0008]/value/value as NEWS2ConsciousnessValue, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0008]/value/normal_status/code_string as NEWS2ConsciousnessValueStatus, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0007]/value/value as NEWS2TemperatureValue, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0028]/value/magnitude as NEWS2Score, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0028]/value/normal_status/code_string as NEWS2ScoreStatus, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0056]/value/value as NEWS2ScoreCategory, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0056]/value/defining_code/code_string as NEWS2ScoreCategoryCode, \\n\" +\r\n\r\n            \"---REFERENCE_RANGES \\n\"+\r\n            \"a_e/data[at0001]/events[at0006]/data[at0003]/items[at0004]/value/other_reference_ranges/meaning/value as bloodPressureSystolicValue_ReferenceRangeMeaning, \\n\" +\r\n            \"a_e/data[at0001]/events[at0006]/data[at0003]/items[at0004]/value/other_reference_ranges/range/lower/magnitude as bloodPressureSystolicValue_ReferenceRangeLowerValue, \\n\" +\r\n            \"a_e/data[at0001]/events[at0006]/data[at0003]/items[at0004]/value/other_reference_ranges/range/upper/magnitude as bloodPressureSystolicValue_ReferenceRangeUpperValue, \\n\" +\r\n            \"a_e/data[at0001]/events[at0006]/data[at0003]/items[at0005]/value/other_reference_ranges/meaning/value as bloodPressureDiastolicValue_ReferenceRangeMeaning, \\n\" +\r\n            \"a_e/data[at0001]/events[at0006]/data[at0003]/items[at0005]/value/other_reference_ranges/range/lower/magnitude as bloodPressureDiastolicValue_ReferenceRangeLowerValue, \\n\" +\r\n            \"a_e/data[at0001]/events[at0006]/data[at0003]/items[at0005]/value/other_reference_ranges/range/upper/magnitude as bloodPressureDiastolicValue_ReferenceRangeUpperValue, \\n\" +\r\n            \r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0028]/value/other_reference_ranges/meaning/value as NEWS2Score_ReferenceRangeMeaning, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0028]/value/other_reference_ranges/range/lower/magnitude as NEWS2Score_ReferenceRangeLowerValue, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0028]/value/other_reference_ranges/range/upper/magnitude as NEWS2Score_ReferenceRangeUpperValue, \\n\" +\r\n            \"---REFERENCE_RANGES (NEWS2 SCORES) \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0006]/value/symbol/value as NEWS2respirationRateOrdinalText, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0029]/value/symbol/value as NEWS2spo2Scale1OrdinalText, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0047]/value/symbol/value as NEWS2spo2Scale2OrdinalText, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0034]/value/symbol/value as NEWS2AirOrOxygenOrdinalText, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/symbol/value as NEWS2BPSystolicOrdinalText, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0005]/value/symbol/value as NEWS2PulseOrdinalText, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0008]/value/symbol/value as NEWS2ConsciousnessOrdinalText, \\n\" +\r\n            \"a_g/data[at0001]/events[at0002]/data[at0003]/items[at0007]/value/symbol/value as NEWS2TemperatureOrdinalText, \\n\" +\r\n            \" \\n\" +\r\n            \"---CONTEXT \\n\" +\r\n            \"a/name/value as templateName, \\n\" +\r\n            \"a/archetype_details/template_id/value as templateId, \\n\" +\r\n            \"a/uid/value as compositionUid, \\n\" +\r\n            \"a/context/start_time/value as dateCompositionSubmitted, \\n\" +\r\n            \"a/composer/name as composer \\n\" +\r\n            \" \\n\" +\r\n            \"FROM EHR e [ehr_id/value=:ehrId]\\n\" +\r\n            \"CONTAINS COMPOSITION a \\n\" +\r\n            \"CONTAINS ( \\n\" +\r\n            \"OBSERVATION a_e[openEHR-EHR-OBSERVATION.blood_pressure.v2] AND \\n\" +\r\n            \"OBSERVATION a_g[openEHR-EHR-OBSERVATION.news2.v1] \\n\" +\r\n            \") \\n\" +\r\n            \"WHERE \\n\" +\r\n            \"  templateId = 'NHS Somerset - eObservations & NEWS2' \\n\" +\r\n            (typeof (ctx.vars.dateFrom) === \"undefined\" || ctx.vars.dateFrom === null ?  '' : '    AND dateCompositionSubmitted >= :dateFrom') +\r\n            (typeof (ctx.vars.dateTo) === \"undefined\" || ctx.vars.dateTo === null ? '' : '    AND dateCompositionSubmitted <= :dateTo') +\r\n            \"\\n\"+\r\n            \"  AND bloodPressurePosition = 'Lying'  \\n\" +\r\n            \"ORDER BY dateCompositionSubmitted DESC \\n\" +\r\n            \"offset 0 limit 6\",\r\n            initvalue: [],\r\n            params: ctx.vars,\r\n            callback: function(out, result) {\r\n                out.push(result);\r\n            }\r\n        })\r\n    };\r\n\r\n    function createRiskStageWidgetObject(titleShort, titleLong, latestValue, historicValues, oldDataPeriod, moreButtonUrl, clickUrl) {\r\n        var riskStageType;\r\n        var sparkline;\r\n        if (titleShort == 'NEWS 2') {\r\n            riskStageType = 'SCORE';\r\n            sparkline = { levels: 4, normalLevel: 0 };\r\n        } else {\r\n            riskStageType = 'ASSESSMENT';\r\n            sparkline = { levels: 7, normalLevel: 3 };\r\n        }\r\n        return {\r\n            'widgetType': 'RISK_STAGE',                 // RISK_STAGE | LIST_OF_FORMS | SINGLE_PARAMETER;\r\n            'riskStageType': riskStageType,             // SCORE | ASSESSMENT\r\n            'oldDataPeriod': oldDataPeriod,\r\n            'titleShort': titleShort,\r\n            'titleLong': titleLong,\r\n            // 'range': { minValue: 0, maxValue: 3 },\r\n            'sparkline': sparkline,\r\n            'latestValue': latestValue,\r\n            'historicValues': historicValues\r\n          };\r\n    }\r\n\r\n    function createEmptyWidget(titleShort, titleLong) {\r\n        var widget = {\r\n            'widgetType': 'RISK_STAGE',\r\n            'titleShort': titleShort,\r\n            'titleLong': titleLong,\r\n            'latestValue': latestValue,\r\n          };\r\n        widgets.push(widget);\r\n        return widget;\r\n    }\r\n\r\n    function setTrend(latestValue, historicValues) {\r\n        if (latestValue != null && latestValue.value != null && historicValues != null && historicValues.length > 1 && historicValues[1].value != null) {\r\n            if (latestValue.value > historicValues[1].value) {\r\n                latestValue.trendIcon = 'trend-up';\r\n                latestValue.trendIconDescription = 'Value increased';\r\n            } else if (latestValue.value < historicValues[1].value) {\r\n                latestValue.trendIcon = 'trend-down';\r\n                latestValue.trendIconDescription = 'Value decreased';\r\n            } else {\r\n                latestValue.trendIcon = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    function evaluate(assessment, value, unit, riskScore, riskText, referenceRange, normalStatus, showHL) {\r\n        var riskClass;\r\n        \r\n        var normalStatusToScoreMapping = {\r\n            \"LLL\": 0,\r\n            \"LL\": 1,\r\n            \"L\": 2,\r\n            \"N\": 3,\r\n            \"H\": 4,\r\n            \"HH\": 5,\r\n            \"HHH\": 6\r\n        };\r\n        var normalStatusToClassMapping = {\r\n            \"LLL\": \"hr\",\r\n            \"LL\": \"mr\",\r\n            \"L\": \"lmr\",\r\n            \"N\": \"lr\",\r\n            \"H\": \"lmr\",\r\n            \"HH\": \"mr\",\r\n            \"HHH\": \"hr\"\r\n        };\r\n        var sparkLineMapping = {\r\n            \"LLL\": 0,\r\n            \"LL\": 1,\r\n            \"L\": 2,\r\n            \"N\": 3,\r\n            \"H\": 4,\r\n            \"HH\": 5,\r\n            \"HHH\": 6\r\n        };\r\n        // TODO Move this logic out of this function and pass the mapping as parameter\r\n        if (riskText != null) {\r\n            sparkLineMapping = {\r\n                \"N\": 0,\r\n                \"H\": 1,\r\n                \"HH\": 2,\r\n                \"HHH\": 3\r\n            };\r\n        }\r\n        var classToText = {\r\n            \"hr\": \"High\",\r\n            \"mr\": \"Medium\",\r\n            \"lmr\": \"Low/Med\",\r\n            \"lr\": \"Low\",\r\n            // \"nr\": \"\", // There is no \r\n        };\r\n        var abnormalFlag = null;\r\n        var sparkLine = null;\r\n        var incompleteFlag;\r\n        if (normalStatus != null && normalStatus in normalStatusToClassMapping) {\r\n            // riskScore = normalStatusToScoreMapping[normalStatus];\r\n            riskClass = normalStatusToClassMapping[normalStatus];\r\n            sparkLine = sparkLineMapping[normalStatus];\r\n            if (normalStatus != \"N\" && showHL) {\r\n                abnormalFlag = normalStatus[0];\r\n            }\r\n        } else {\r\n            // riskScore = null;\r\n            riskClass = null;\r\n        }\r\n\r\n        if (riskText == \"riskText\") {\r\n            if (riskClass != null && riskClass in classToText) {\r\n                riskText = classToText[riskClass];\r\n            } else {\r\n                riskText = null;\r\n            }\r\n        }\r\n\r\n        if (value === null || value === undefined) {\r\n            riskClass = normalStatusToClassMapping['LLL'];\r\n            sparkLine = sparkLineMapping['LLL'];\r\n            riskScore = 3;\r\n            incompleteFlag = true;\r\n            value = 'Not entered';\r\n        }\r\n\r\n        return {\r\n            'compositionUid': (assessment.compositionUid.split(\"::\"))[0],\r\n            'value': value,\r\n            'unit': unit,\r\n            'date': assessment.dateCompositionSubmitted,\r\n            // Comments?\r\n            // 'details': [{label: 'Response', value: 'Key threshold for urgent response'}, {label: 'Response', value: 'Key threshold for urgent response'}],\r\n            'class': riskClass,\r\n            'riskText': riskText,\r\n            'riskScore': riskScore,\r\n            'range': { referenceValue: referenceRange },\r\n            'sparklineLevel': sparkLine,\r\n            'abnormalFlag': abnormalFlag,\r\n            'incompleteFlag': incompleteFlag,\r\n            'composer': assessment.composer,\r\n            'raw': {\r\n                'normalStatus': normalStatus,\r\n                'compositionUid': assessment.compositionUid\r\n            }\r\n        };\r\n    }\r\n\r\n    function evaluateNews2(assessment) {\r\n        var widget = evaluate(assessment, assessment.NEWS2Score, '', assessment.NEWS2Score, \"riskText\", null, assessment.NEWS2ScoreStatus, false);\r\n        if (assessment.tags.tags) {\r\n            var statusValue;\r\n            for (var i = 0; i < assessment.tags.tags.length; i++) {\r\n                if (assessment.tags.tags[i].tag === 'messageStatus') {\r\n                    statusValue = assessment.tags.tags[i].value;\r\n                }\r\n            }\r\n            widget.incompleteFlag = statusValue === 'I';\r\n            if (statusValue === 'I') {\r\n                widget.riskText = '*Score incomplete';\r\n            }\r\n        }\r\n        return widget;\r\n    }\r\n\r\n    function evaluateRespirationRate(assessment) {\r\n        return evaluate(assessment, assessment.respirationRateValue, 'breaths/min', assessment.NEWS2RespirationRateValue, null, assessment.NEWS2respirationRateOrdinalText, assessment.respirationRateValueStatus, true);\r\n    }\r\n\r\n    function evaluateSpoScale(assessment) {\r\n        var value, ordinalText, news2value, valueStatus, riskScore;\r\n        if (assessment.spo2Scale1Value != null) {\r\n            value = assessment.spo2Scale1Value;\r\n            ordinalText = assessment.NEWS2spo2Scale1OrdinalText;\r\n            news2value = assessment.NEWS2Spo2Scale1Value;\r\n            riskScore = assessment.NEWS2Spo2Scale1Value;\r\n            valueStatus = assessment.spo2Scale1ValueStatus;\r\n        } else if (assessment.spo2Scale2Value != null) {\r\n            value = assessment.spo2Scale2Value;\r\n            ordinalText = assessment.NEWS2spo2Scale2OrdinalText;\r\n            news2value = assessment.NEWS2Spo2Scale2Value;\r\n            riskScore = assessment.NEWS2Spo2Scale2Value;\r\n            valueStatus = assessment.spo2Scale2ValueStatus;\r\n        }\r\n        var evaluation = evaluate(assessment, value, '%', riskScore, null, ordinalText, valueStatus, true);\r\n        if (assessment.spo2Scale1Value != null) {\r\n            evaluation.description = 'Scale 1';\r\n        } else if (assessment.spo2Scale2Value != null) {\r\n            evaluation.description = 'Scale 2';\r\n        }\r\n        return evaluation;\r\n    }\r\n\r\n    function spoWidgetHandler(widget) {\r\n        var allScalesSame = true;\r\n        widget.historicValues.forEach(function(historicValue) {\r\n            if (widget.latestValue.description !== historicValue.description) {\r\n                allScalesSame = false;\r\n            }\r\n        });\r\n        if (allScalesSame) {\r\n            widget.titleShort += ' ' + widget.latestValue.description;\r\n            widget.titleLong += ' ' + widget.latestValue.description;\r\n            widget.latestValue.description = null;\r\n            widget.historicValues = widget.historicValues.map(function(historicValue) {\r\n                historicValue.description = null;\r\n                return historicValue;\r\n            })\r\n        } else {\r\n            widget.warning = 'Different scales';\r\n            widget.warningIcon = 'triangle-exclamation text-danger';\r\n        }\r\n        return widget;\r\n    }\r\n\r\n    function evaluateAirOrOxygen(assessment) {\r\n        var widget = evaluate(assessment, assessment.NEWS2AirOrOxygenOrdinalText, ' ', assessment.NEWS2AirOrOxygenValue, null, null, assessment.NEWS2AirOrOxygenValueStatus, false);\r\n        var details = {\r\n            list: []\r\n        };\r\n        if (assessment.inspiredOxygenDeviceScale1 && assessment.inspiredOxygenDeviceScale1 !== 'None') {\r\n            details.list.push({label: 'Device', value: assessment.inspiredOxygenDeviceScale1});\r\n        }\r\n        if (assessment.flowRateScale1Value) {\r\n            details.list.push({label: 'Flow rate', value: assessment.flowRateScale1Value + ' ' + assessment.flowRateScale1Units});\r\n        }\r\n        if (assessment.O2percentScale1Value) {\r\n            details.list.push({label: 'Percent O2', value: assessment.O2percentScale1Value});\r\n        }\r\n        if (assessment.inspiredOxygenDeviceScale2 && assessment.inspiredOxygenDeviceScale2 !== 'None') {\r\n            details.list.push({label: 'Device', value: assessment.inspiredOxygenDeviceScale2});\r\n        }\r\n        if (assessment.flowRateScale2Value) {\r\n            details.list.push({label: 'Flow rate', value: assessment.flowRateScale2Value + ' ' + assessment.flowRateScale2Units});\r\n        }\r\n        if (assessment.O2percentScale2Value) {\r\n            details.list.push({label: 'Percent O2', value: assessment.O2percentScale2Value});\r\n        }\r\n        if (details.list.length) {\r\n            widget.details = [details];\r\n        }\r\n        return widget;\r\n    }\r\n\r\n    // Lying\r\n    function evaluateBloodPressure(assessment) {\r\n        if (assessment == undefined && assessment == null) return null; // createEmptyWidget('Blood Pressure', 'Blood Pressure');\r\n        var widget = evaluate(assessment, assessment.bloodPressureSystolicValue, 'mmHg', assessment.NEWS2BPSystolicValue, null, assessment.NEWS2BPSystolicOrdinalText, assessment.bloodPressureSystolicValueStatus, true);\r\n        var details = {\r\n            list: [\r\n                {label: 'Position', value: 'Lying'}\r\n            ]\r\n        };\r\n        widget.details = [details];\r\n        if (assessment.bloodPressureSystolicValue != null) {\r\n            widget.bloodPressureDiastolicValue = assessment.bloodPressureDiastolicValue;\r\n        }\r\n        return widget;\r\n    }\r\n\r\n    function evaluateStandingBloodPressure(assessment) {\r\n        \r\n    }\r\n\r\n    function evaluateHeartRate(assessment) {\r\n        var widget = evaluate(assessment, assessment.heartRateValue, 'bpm', assessment.NEWS2PulseValue, null, assessment.NEWS2PulseOrdinalText, assessment.heartRateValueStatus, true);\r\n        var details = {\r\n            list: []\r\n        };\r\n        if (assessment.heartRateRegularity) {\r\n            details.list.push({label: 'Regular/Irregular', value: assessment.heartRateRegularity})\r\n        }\r\n        if (assessment.heartRateBodySiteMeasurement) {\r\n            details.list.push({label: 'Body location', value: assessment.heartRateBodySiteMeasurement})\r\n        }\r\n        if (details.list.length) {\r\n            widget.details = [details];\r\n        }\r\n        return widget;\r\n    }\r\n\r\n    function evaluateTemperature(assessment) {\r\n        var widget = evaluate(assessment, assessment.bodyTemperatureValue, '°C', assessment.NEWS2TemperatureValue, null, assessment.NEWS2TemperatureOrdinalText, assessment.bodyTemperatureValueStatus, true);\r\n        if (assessment.bodyTemperatureLocation) {\r\n            widget.details = [{\r\n                list: [\r\n                    {label: 'Location', value: assessment.bodyTemperatureLocation}\r\n                ]\r\n            }]\r\n        }\r\n        return widget;\r\n    }\r\n\r\n    function evaluateConsciousness(assessment) {\r\n        return evaluate(assessment, assessment.ACVPUscale, \"ACVPU\", assessment.NEWS2ConsciousnessValue, null, null, assessment.NEWS2ConsciousnessValueStatus, false);\r\n    }\r\n\r\n    function addRiskStageWidget(titleShort, titleLong, oldDataPeriod, res, resKey, handler, widgetHandler) {\r\n        if (res[resKey] == null) {\r\n            return null;\r\n        }\r\n        if (res[resKey][0] == null && !Array.isArray(res[resKey])) {\r\n            // Convert single object to array with one object\r\n            res[resKey] = [res[resKey]];\r\n        }\r\n\r\n        latestValue = handler(res[resKey][0]);\r\n        // res['newsAssessment'].shift();\r\n        historicValues = res[resKey].map(handler); // Wrap this in try-catch\r\n\r\n        // Move these ifs into separate functions and pass them as parameters (additionalHandler?)\r\n        if (titleShort != null && titleShort != 'Air or Oxygen?' && titleShort != 'Consciousness') {\r\n            setTrend(latestValue, historicValues);\r\n        }\r\n\r\n        if (titleShort != null && titleShort.startsWith('Blood Pressure')) {\r\n            function modify(x) {\r\n                if (x != undefined && x.value != 'Not entered') x.value = \"\" + x.value + \"/\" + x.bloodPressureDiastolicValue;\r\n                return x;\r\n            }\r\n            latestValue = modify(latestValue);\r\n            historicValues = historicValues.map(modify);\r\n            if (latestValue != null) latestValue.raw = res[resKey][0];\r\n        }\r\n\r\n        if (titleShort != null && titleShort.startsWith('NEWS 2')) {\r\n            // Remove risk text from historic values\r\n            function modify(x) {\r\n                // if (x != undefined && x != null && x.riskText != null) x.riskText = null;\r\n                return x;\r\n            }\r\n            historicValues = historicValues.map(modify);\r\n        }\r\n\r\n        var w = createRiskStageWidgetObject(titleShort, titleLong, latestValue, historicValues, oldDataPeriod, null, null);\r\n        if (widgetHandler) {\r\n            w = widgetHandler(w);\r\n        }\r\n        widgets.push(w);\r\n\r\n        return w;\r\n    }\r\n\r\n    var latestValue;\r\n    var historicValues = [];\r\n    var widgets = [];\r\n    Ehr.allhash(promises, function(res) {\r\n        if (res['newsAssessment'] == null || res['newsAssessment'].length == 0) {\r\n            latestValue = null;\r\n            var news2 = createEmptyWidget('NEWS 2', 'National early warning score 2');\r\n            var respiratoryRate = createEmptyWidget('Respiration Rate', 'Respiration Rate');\r\n            var spo2 = createEmptyWidget('SpO₂ Scale', 'SpO₂ Scale');\r\n            var airOrOxygen = createEmptyWidget('Air or Oxygen?', 'Air or Oxygen?');\r\n            var bloodPressure = createEmptyWidget('Blood Pressure', 'Blood Pressure');\r\n            var heartRate = createEmptyWidget('Pulse', 'Pulse');\r\n            var temperature = createEmptyWidget('Temperature', 'Temperature');\r\n            var consciousness = createEmptyWidget('Consciousness', 'Consciousness');\r\n        } else {\r\n            // widgets.push(res['newsAssessment']);\r\n            var news2 = addRiskStageWidget('NEWS 2', 'National early warning score 2', 'P1D', res, 'newsAssessment', evaluateNews2);\r\n            var respiratoryRate = addRiskStageWidget('Respiration Rate', 'Respiration Rate', 'P1D', res, 'newsAssessment', evaluateRespirationRate);\r\n            var spo2 = addRiskStageWidget('SpO₂', 'SpO₂', 'P1D', res, 'newsAssessment', evaluateSpoScale, spoWidgetHandler);\r\n            var airOrOxygen = addRiskStageWidget('Air or Oxygen?', 'Air or Oxygen?', 'P1D', res, 'newsAssessment', evaluateAirOrOxygen);\r\n            \r\n            var bloodPressure = addRiskStageWidget('Blood Pressure', 'Blood Pressure', 'P1D', res, 'bloodPressureLying', evaluateBloodPressure);\r\n            \r\n            var heartRate = addRiskStageWidget('Pulse', 'Pulse', 'P1D', res, 'newsAssessment', evaluateHeartRate);\r\n            var temperature = addRiskStageWidget('Temperature', 'Temperature', 'P1D', res, 'newsAssessment', evaluateTemperature);\r\n            var consciousness = addRiskStageWidget('Consciousness', 'Consciousness', 'P1D', res, 'newsAssessment', evaluateConsciousness);\r\n\r\n            function mapWidgetToDetails(widget) {\r\n                var details = {};\r\n                for (var key in widget.latestValue) {\r\n                    details[key] = widget.latestValue[key];\r\n                }\r\n                details.riskText = widget.titleShort;\r\n                return details;\r\n            }\r\n\r\n            news2.latestValue.measurements = [];\r\n            /* TODO: implement this for all values, latest and historic. Disabling this for now.\r\n            if (respiratoryRate.latestValue != null) news2.latestValue.measurements.push(mapWidgetToDetails(respiratoryRate));\r\n            if (spo2.latestValue != null) news2.latestValue.measurements.push(mapWidgetToDetails(spo2));\r\n            if (airOrOxygen.latestValue != null) news2.latestValue.measurements.push(mapWidgetToDetails(airOrOxygen));\r\n            if (bloodPressure.latestValue != null) news2.latestValue.measurements.push(mapWidgetToDetails(bloodPressure));\r\n            if (heartRate.latestValue != null) news2.latestValue.measurements.push(mapWidgetToDetails(heartRate));\r\n            if (consciousness.latestValue != null) news2.latestValue.measurements.push(mapWidgetToDetails(consciousness));\r\n            if (temperature.latestValue != null) news2.latestValue.measurements.push(mapWidgetToDetails(temperature));\r\n            */\r\n        }\r\n    });\r\n\r\n    return {\r\n        \"widgets\": widgets\r\n    }\r\n}\r\n"}]}