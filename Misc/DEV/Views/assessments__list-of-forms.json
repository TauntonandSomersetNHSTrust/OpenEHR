{"name":"assessments::list-of-forms","category":"view","description":"List of Forms Assessment Widget","metaData":"{\r\n  \"parameters\": [\r\n      {\r\n          \"name\": \"ehrId\",\r\n          \"type\": \"string\",\r\n          \"description\": \"Ehr id\"\r\n      },\r\n      {\r\n          \"name\": \"templates\",\r\n          \"type\": \"array\",\r\n          \"description\": \"Templates\"\r\n      },\r\n      {\r\n          \"name\": \"dateFrom\",\r\n          \"type\": \"string\",\r\n          \"description\": \"Date From\"\r\n      }\r\n  ]\r\n}","steps":[{"processorName":"js","processorData":"// List of Forms Widget View v1.0.2\r\n// Template required: /\r\n// HW: 1.0.2 - return empty item list if dateFrom not provided\r\n\r\nfunction generateAql(template) {\r\n    return \"SELECT\\n\"+\r\n            // \"    -- a1\\n\"+\r\n            \"    c/uid/value as compositionUid,\\n\"+\r\n            \"    c/archetype_details/template_id/value as templateId,\\n\"+\r\n            \"    'ignore me lol' as lifecycleStateValue,\\n\"+\r\n            \"    c/context/start_time/value as dateCompositionSubmitted\\n\"+\r\n            \"FROM EHR e [ehr_id/value=:ehrId]\\n\"+\r\n            \"CONTAINS COMPOSITION c\\n\"+\r\n            \"WHERE templateId = '\" + template + \"' \\n\"+\r\n\r\n            \"AND dateCompositionSubmitted > :dateFrom\\n\"+\r\n            \"ORDER BY dateCompositionSubmitted DESC\\n\"+\r\n            \"OFFSET 0 LIMIT 1\"\r\n}\r\n\r\nfunction generateEhrQuery(ctx, template) {\r\n    return Ehr.query({\r\n        aql: generateAql(template),\r\n        initvalue: [],\r\n        params: {\r\n          ehrId: ctx.vars.ehrId,\r\n          dateFrom: ctx.vars.dateFrom\r\n        },\r\n        callback: function(out, result) {\r\n            out.push(result);\r\n        }\r\n    })\r\n}\r\n\r\nfunction compute(ctx, src)\r\n{\r\n    /*\r\n    var promises = {\r\n        waterlow: generateEhrQuery(ctx, \"Waterlow pressure damage risk assessment\"),\r\n        must: generateEhrQuery(ctx, \"Malnutrition universal screening tool\")\r\n    };\r\n    */\r\n    var forms = [];\r\n    if(ctx.vars.dateFrom) {\r\n    var templates = ctx.vars.templates;\r\n    var promises = {};\r\n    for (var k in templates) {\r\n        promises[k] = generateEhrQuery(ctx, templates[k]);\r\n    }\r\n\r\n    \r\n    Ehr.allhash(promises, function(res) {\r\n        // forms.push(res); // DEBUG\r\n        // forms.push(ctx);\r\n        for (var k in res) {\r\n            if (res[k] != null && res[k].length > 0) {\r\n                forms.push({\r\n                    name: res[k][0]['templateId'],\r\n                    state: res[k][0]['lifecycleStateValue'],\r\n                    date: res[k][0]['dateCompositionSubmitted'],\r\n                    lifecycleStateValue: res[k][0]['lifecycleStateValue'],\r\n                    clickUrl: {\r\n                        'path': '' + res[k][0]['compositionUid'],\r\n                        'navigationType': 'PORTAL'\r\n                    },\r\n                    badge: (\"complete\" != res[k][0]['lifecycleStateValue']) ? {'text': 'In progress'} : null\r\n                });\r\n            }\r\n        }\r\n    });\r\n    } else {\r\nforms.push('no date provided');\r\n}\r\n\r\n\t\r\n\tvar singleForms = [];\r\n\tfor(var i = 0; i < forms.length; i++) {\r\n\t\tvar found = false;\r\n\t\tfor(var j = 0; j < singleForms.length; j++) {\r\n\t\t\tif(singleForms[j].name == forms[i].name) {\t\r\n\t\t\t\tfound = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(!found) {\r\n\t\t\tsingleForms.push(forms[i]);\r\n\t\t}\r\n\t}\r\n\r\n    return {\r\n        'widgetType': 'LIST_OF_ITEMS',\r\n        'titleShort': 'Completed assessments and care plans',\r\n        'titleLong': 'Completed assessments and care plans',\r\n        'items': singleForms\r\n    };\r\n\r\n}\r\n"}]}