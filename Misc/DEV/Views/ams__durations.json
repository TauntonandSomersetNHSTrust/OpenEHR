{"name":"ams::durations","category":"view","description":"Get medication durations for a single patient and specified medications","metaData":"{\r\n    \"parameters\": [\r\n        {\r\n            \"name\": \"medications\",\r\n            \"type\": \"array\",\r\n            \"description\": \"Antimicrobial medication codes\"\r\n        },\r\n        {\r\n            \"name\": \"routes\",\r\n            \"type\": \"array\",\r\n            \"description\": \"Routes of administration\"\r\n        },\r\n        {\r\n            \"name\": \"ehrId\",\r\n            \"type\": \"string\",\r\n            \"description\": \"Ehr Id\"\r\n        },\r\n{\r\n            \"name\": \"patientIds\",\r\n            \"type\": \"array\",\r\n            \"description\": \"Patient subject ids\"\r\n        }\r\n    ]\r\n}","steps":[{"processorName":"js","processorData":"// View: ams::durations v1.0.0\r\n// Templates required: OPENeP - Inpatient Prescription, OPENeP - Medication Administration\r\n// Author: BoÅ¡tjan Lah (bostjan.lah@better.care)\r\n\r\nfunction compute(ctx, src) {\r\n    var aql = 'SELECT \\n' +\r\n        'a/description[at0002]/items[at0070]/value/defining_code/code_string as medsCode1, \\n' +\r\n        'a/description[at0002]/items[openEHR-EHR-CLUSTER.medication.v0]/items[openEHR-EHR-CLUSTER.medication.v0]/items[at0132]/value/defining_code/code_string  as medsCode2,\\n' +\r\n        'a/description[at0002]/items[at0113]/items[at0012]/value as startDate,\\n' +\r\n        'a/description[at0002]/items[at0070]/value/value as medsValue1,\\n' +\r\n        'a/description[at0002]/items[openEHR-EHR-CLUSTER.medication.v0]/items[openEHR-EHR-CLUSTER.medication.v0]/items[at0132]/value/value as medsValue2,\\n' +\r\n        'a/description[at0002]/items[at0113]/items[at0013]/value as endDate,\\n' +\r\n        'a/description[at0002]/items[at0091]/value/defining_code/code_string as routeCode,\\n' +\r\n        'a/description[at0002]/items[at0091]/value/value as routeValue,\\n' +\r\n        'a/description[at0002]/items[at0018]/value/value as indication,\\n' +\r\n        'a/description[at0002]/items[at0009]/value/value as description,\\n' +\r\n        'current_state(a) as state,\\n' +\r\n        'c/uid/value as cuid\\n' +\r\n        'FROM EHR e[ehr_id/value=:ehrId]\\n' +\r\n        'CONTAINS Composition c[openEHR-EHR-COMPOSITION.prescription.v0]\\n' +\r\n        'CONTAINS Instruction i[openEHR-EHR-INSTRUCTION.medication_order.v2]\\n' +\r\n        'CONTAINS Activity a[at0001]\\n' +\r\n        'WHERE c/name/value = \\'Inpatient Prescription\\'\\n' +\r\n        'AND\\n' +\r\n        '(a/description[at0002]/items[at0070]/value/defining_code/code_string matches {:medications} \\n' +\r\n        'OR \\n' +\r\n        'i/activities[at0001]/description[at0002]/items[openEHR-EHR-CLUSTER.medication.v0]/items[openEHR-EHR-CLUSTER.medication.v0]/items[at0132]/value/defining_code/code_string matches {:medications})\\n'\r\n    if (ctx.vars.routes) {\r\n        aql += 'AND a/description[at0002]/items[at0091]/value/defining_code/code_string matches {:routes}'\r\n    }\r\n    if (ctx.vars.patientIds) {\r\n        aql += 'AND e/ehr_status/subject/external_ref/id/value matches {:patientIds}'\r\n    }\r\n    aql += \" AND (endDate >= current_timestamp('-P1M') OR not exists a/description[at0002]/items[at0113]/items[at0013]/value) \"\r\n    var promises = {\r\n        durations: Ehr.query({\r\n            aql: aql,\r\n            params: ctx.vars,\r\n            initvalue: [],\r\n            callback: function (out, meds) {\r\n                var medsCode = meds['medsCode1'] ? meds['medsCode1'] : meds['medsCode2'];\r\n                var medsName = meds['medsValue1'] ? meds['medsValue1'] : meds['medsValue2'];\r\n                var startDate = meds['startDate'] ? meds['startDate'].value : '';\r\n                var endDate = meds['endDate'] ? meds['endDate'].value : '';\r\n                if (endDate === '' && meds['state'] === 'SUSPENDED') {\r\n                    endDate = getSuspensionDate(meds['cuid']);\r\n                }\r\n                out.push(\r\n                    {\r\n                        \"medication\": medsCode,\r\n                        \"medicationName\": medsName,\r\n                        \"startDate\": startDate,\r\n                        \"endDate\": endDate,\r\n                        \"routeCode\": meds['routeCode'],\r\n                        \"routeValue\": meds['routeDescription'],\r\n                        \"routeValue\": meds['routeValue'],\r\n                        \"indication\": meds['indication'],\r\n                        \"description\": meds['description'],\r\n                        \"state\": meds['state'],\r\n                        \"cuid\": meds['cuid']\r\n                    }\r\n                );\r\n            }\r\n        }),\r\n    };\r\n\r\n    var result = {};\r\n    Ehr.allhash(promises, function (res) {\r\n        result = res.durations;\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nfunction getSuspensionDate(cuid) {\r\n    var index = cuid.indexOf('::');\r\n    var versionedUid = cuid;\r\n    if (index > 0) {\r\n        versionedUid = cuid.substring(0, index);\r\n    }\r\n    var promises = {\r\n        actions: Ehr.query({\r\n            aql: 'SELECT a/time/value as endDate\\n' +\r\n                'FROM ACTION a[openEHR-EHR-ACTION.medication.v1] \\n' +\r\n                'WHERE a/instruction_details/instruction_id/id/value = :uid1 OR a/instruction_details/instruction_id/id/value = :uid2 ' +\r\n                'ORDER BY a/time DESC ' +\r\n                'FETCH 1',\r\n            params: {\r\n                uid1: cuid,\r\n                uid2: versionedUid\r\n            }\r\n        })\r\n    };\r\n    var endDate = '';\r\n    Ehr.allhash(promises, function (res) {\r\n        if (res && res['actions'] !== undefined && res['actions'].length > 0) {\r\n            endDate = res['actions'][0].endDate;\r\n        }\r\n    });\r\n    return endDate;\r\n}\r\n"}]}