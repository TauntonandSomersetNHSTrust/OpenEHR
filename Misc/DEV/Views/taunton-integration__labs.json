{"name":"taunton-integration::labs","category":"view","description":"Taunton Integration Labs Widget","metaData":"{\r\n    \"parameters\": []\r\n}","steps":[{"processorName":"js","processorData":"// Taunton Integration Labs Widget v1.0.0\r\n// Template required: ?\r\n\r\nfunction compute(ctx, src)\r\n{\r\n    var promises = {\r\n        labsResult: Ehr.query({\r\n            aql: \"select \" +\r\n                \"    a_a/items[at0024]/value/value as analyteName, \" +\r\n                \"    a_a/items[at0024]/value/defining_code/code_string as analyteCode, \" +\r\n                \"    c/content[openEHR-EHR-OBSERVATION.laboratory_test_result.v1]/other_participations/performer/name as orderPerformer, \" +\r\n                \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0005]/value/value as testName, \" +\r\n                \"    c/context/start_time/value as dateCompositionSubmitted, \" +\r\n                \"    c/uid/value as compositionId, \" +\r\n                \"    c/content[openEHR-EHR-OBSERVATION.laboratory_test_result.v1]/data[at0001]/events[at0002]/data[at0003]/items[openEHR-EHR-CLUSTER.specimen.v1]/items[at0015]/value as specimenDateTimeCollected, \" +\r\n                \"    a_a/items[at0005]/value/value as resultStatus, \" +\r\n                \"    a_a/items[at0027]/value/magnitude as analyteResultSequence, \" +\r\n                \"    a_a/items[at0001]/value/magnitude as analyteResultValue, \" +\r\n                \"    a_a/items[at0001]/value/units as analyteResultValueUnit, \" +\r\n                \"    a_a/items[at0001]/value/numerator as analyteResultRatioValueNumerator, \" +\r\n                \"    a_a/items[at0001]/value/denominator as analyteResultValueRatioDenominator, \" +\r\n                \"    a_a/items[at0001]/value/normal_range/code_string as analyteResultValueStatus, \" +\r\n                \"    a_a/items[at0001]/value/normal_range/meaning/value as analyteResultValue_ReferenceRangeMeaning, \" +\r\n                \"    a_a/items[at0001]/value/normal_range/lower/magnitude as analyteResultValue_ReferenceRangeLowerValue, \" +\r\n                \"    a_a/items[at0001]/value/normal_range/lower/units as analyteResultValue_ReferenceRangeLowerUnits, \" +\r\n                \"    a_a/items[at0001]/value/normal_range/upper/magnitude as analyteResultValue_ReferenceRangeUpperValue, \" +\r\n                \"    a_a/items[at0001]/value/normal_range/upper/units as analyteResultValue_ReferenceRangeUpperUnits, \" +\r\n                \"    a_a/items[at0001]/value/normal_range/lower/denominator as analyteResultDemonimator_ReferenceRangeLower, \" +\r\n                \"    a_a/items[at0001]/value/normal_range/lower/numerator as analyteResultNumerator_ReferenceRangeLower, \" +\r\n                \"    a_a/items[at0001]/value/normal_range/upper/denominator as analyteResultDemonimator_ReferenceRangeUpper, \" +\r\n                \"    a_a/items[at0001]/value/normal_range/upper/numerator as analyteResultNumerator_ReferenceRangeUpper, \" +\r\n                \"    a_a/items[at0001]/value/normal_status/code_string as analyteResultValueStatus, \" +\r\n                \"    a_b/items[at0005]/value/value as analyteComment \\n\" +\r\n                \"from EHR e [ehr_id/value=:ehrId]\\n\"+\r\n                // \"from EHR e\\n\"+\r\n                \"contains COMPOSITION c[openEHR-EHR-COMPOSITION.report-result.v1] \\n\" +\r\n                \"contains ( \" +\r\n                \"    CLUSTER a_a[openEHR-EHR-CLUSTER.laboratory_test_analyte.v1] or \" +\r\n                \"    CLUSTER a_b[openEHR-EHR-CLUSTER.specimen.v0]) \\n\" +\r\n                \"where \" +\r\n                \"c/name/value='Laboratory test report' and \" +\r\n                \"resultStatus='Final' AND \" +\r\n                \"a_a/items[at0024]/value/defining_code/code_string MATCHES {'BS_TCREA','BS_TGLUC', 'BS_TINR', 'BS_TCRP', 'BS_TAPTT', 'BS_TARAT', 'BS_TARAT', 'BS_TINR'} \\n\" +\r\n                \"order by specimenDateTimeCollected desc \",\r\n            initvalue: [],\r\n            params: {\r\n              ehrId: ctx.vars.ehrId,\r\n            },\r\n            callback: function(out, result) {\r\n                out.push(result);\r\n            }\r\n        })\r\n    };\r\n\r\n    function evaluate(assessment) {\r\n        var exportGroup = [];\r\n\r\n        assessment.map(function(item) {\r\n            if (item.testName === null || item.testName === undefined) {\r\n                if (exportGroup.length > 0) {\r\n                    var existingGroupIndex = -1;\r\n                    var existingItemIndex = -1;\r\n                    exportGroup.forEach(function(group, groupIndex) {\r\n                        if (!!group.title) {\r\n                            return false;\r\n                        }\r\n                        group.items.forEach(function(existingItem, index) {\r\n                            if (!!existingItem.titleLong && !!item.analyteName && existingItem.titleLong.toLowerCase() === item.analyteName.toLowerCase()) {\r\n                                existingItemIndex = index;\r\n                                existingGroupIndex = groupIndex;\r\n                            }\r\n                        });\r\n                    });\r\n                    if (existingGroupIndex === -1) {\r\n                        if (item.analyteName && item.analyteResultValue || item.analyteResultRatioValueNumerator) {\r\n                            exportGroup.push(createGroup(item));\r\n                        }\r\n                    } else if (existingItemIndex !== -1 && existingGroupIndex !== -1) {\r\n                        if (exportGroup[existingGroupIndex].items[existingItemIndex].historicValues.length < 5) {\r\n                            exportGroup[existingGroupIndex].items[existingItemIndex].historicValues.push(createLabValue(item));\r\n                        }\r\n                    } else {\r\n                        exportGroup[existingGroupIndex].items.push(createLabItem(item));\r\n                    }\r\n                } else {\r\n                    if (item.analyteName && item.analyteResultValue || item.analyteResultRatioValueNumerator) {\r\n                        exportGroup.push(createGroup(item));\r\n                    }\r\n                }\r\n            } else {\r\n                if (exportGroup.length > 0) {\r\n                    var existingGroupIndex = -1;\r\n                    var existingItemIndex = -1;\r\n                    exportGroup.forEach(function(group, groupIndex) { \r\n                        if (!!group.title && !!item.testName && group.title.toLowerCase() === item.testName.toLowerCase()) {\r\n                            existingGroupIndex = groupIndex;\r\n                        } \r\n                    });\r\n                    if (existingGroupIndex === -1) {\r\n                        if (item.analyteName && item.analyteResultValue) {\r\n                            exportGroup.push(createGroup(item));\r\n                        }\r\n                    } else {\r\n                        group.items.forEach(function(existingItem, index) {\r\n                            if (existingItem.titleLong === item.analyte) {\r\n                                existingItemIndex = index;\r\n                            }\r\n                        });\r\n                        if (existingItemIndex !== -1) {\r\n                            if (exportGroup[existingGroupIndex].items[existingItemIndex].historicValues < 5) {\r\n                                exportGroup[existingGroupIndex].items[existingItemIndex].historicValues.push(createLabValue(item));\r\n                            }\r\n                        } else {\r\n                            exportGroup[existingGroupIndex].items.push(createLabItem(item));\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (item.analyteName && item.analyteResultValue) {\r\n                        exportGroup.push(createGroup(item));\r\n                    }\r\n                }\r\n            }\r\n        });\r\n       return exportGroup;\r\n    }\r\n\r\n    function createGroup(analyte) {\r\n        var dateCollected;\r\n        if (analyte.specimenDateTimeCollected) {\r\n            dateCollected = analyte.specimenDateTimeCollected.value;\r\n        }\r\n        return {\r\n            title: analyte.testName,\r\n            date: dateCollected,\r\n            items: [createLabItem(analyte)]\r\n        };\r\n    }\r\n\r\n    function createLabItem(analyte) {\r\n        return {\r\n            titleLong: analyte.analyteName,\r\n            unit: analyte.analyteResultValueUnit,\r\n            latestValue: createLabValue(analyte),\r\n            range: {minValue: analyte.analyteResultValue_ReferenceRangeLowerValue, maxValue: analyte.analyteResultValue_ReferenceRangeUpperValue},\r\n            historicValues: [createLabValue(analyte)]\r\n          };\r\n    }\r\n    function mapValueStatusToClass(status) {\r\n        var normalStatusToClassMapping = {\r\n            \"LLL\": \"hr\",\r\n            \"LL\": \"mr\",\r\n            \"L\": \"lmr\",\r\n            \"N\": \"lr\",\r\n            \"H\": \"lmr\",\r\n            \"HH\": \"mr\",\r\n            \"HHH\": \"hr\"\r\n        };\r\n        return normalStatusToClassMapping[status];\r\n    }\r\n\r\nfunction mapValueStatusToAbnormalFlag(status) {\r\n        var normalStatusToAbnormalFlag = {\r\n            \"LLL\": \"L\",\r\n            \"LL\": \"L\",\r\n            \"L\": \"L\",\r\n            \"N\": \"N\",\r\n            \"H\": \"H\",\r\n            \"HH\": \"H\",\r\n            \"HHH\": \"H\"\r\n        };\r\n        return normalStatusToAbnormalFlag[status];\r\n    }\r\n    function createLabValue(analyte) {\r\n        // analyteResultValueStatus for class\r\n        var dateCollected;\r\n        if (analyte.specimenDateTimeCollected) {\r\n            dateCollected = analyte.specimenDateTimeCollected.value;\r\n        }\r\n        return {\r\n            value: analyte.analyteResultValue || analyte.analyteResultRatioValueNumerator, unit: analyte.analyteResultValueUnit, class: mapValueStatusToClass(analyte.analyteResultValueStatus), date: dateCollected, composer: analyte.orderPerformer,\r\nabnormalFlag: mapValueStatusToAbnormalFlag(analyte.analyteResultValueStatus)\r\n        };\r\n    }\r\n\r\n    var groups;\r\n    Ehr.allhash(promises, function (res) {\r\n        if (res['labsResult'] && res['labsResult'].length > 0) {\r\n            groups = evaluate(res['labsResult']);\r\n        }\r\n    });\r\n    \r\n     return groups ? {\r\n        'widgetType': 'LAB_RESULTS',    // RISK_STAGE | LIST_OF_FORMS | SINGLE_PARAMETER;\r\n        'titleShort': 'Lab Result',\r\n        'titleLong': 'Laboratory Result',\r\n        'groups': groups\r\n    } : null;\r\n    \r\n    /*\r\n    return {\r\n    widgetType: 'LAB_RESULTS',\r\n    titleShort: 'Lab Result',\r\n    titleLong: 'Laboratory Result',\r\n    groups: [\r\n      {\r\n        title: 'Hemogram',\r\n        terminology: 'hemogram',\r\n        date: '2019-11-21T09:00:00+01:00',\r\n        items: [\r\n          {\r\n            titleLong: 'L',\r\n            unit: 'μmol/L',\r\n            latestValue: {\r\n                value: 3.7, unit: 'μmol/L', class: 'lr', date: '2019-11-21T09:00:00+01:00', composer: 'Janez Novak M.D.'\r\n            },\r\n            range: {minValue: 1, maxValue: 4, referenceValue: 0},\r\n            historicValues: [\r\n              {value: 30, date: '2020-07-19T10:38:24.873+01:00', class: 'hr', composer: 'Janez Novak M.D.'}\r\n            ]\r\n          },\r\n          {\r\n            titleLong: 'E',\r\n            unit: 'ml/min',\r\n            latestValue: {value: 4, date: '2020-07-21T10:54:39.274+01:00', class: 'hr', composer: 'Vanessa Pereira'},\r\n            range: {maxValue: 6, referenceValue: 0},\r\n            historicValues: [\r\n              {value: -2, date: '2020-07-15T10:38:24.873+01:00', class: 'mr', composer: 'Janez Novak M.D.'},\r\n              {value: -1, date: '2020-07-16T10:38:24.873+01:00', class: 'lmr', composer: 'Janez Novak M.D.'},\r\n              {value: 0, date: '2020-07-17T10:38:24.873+01:00', class: 'lr', composer: 'Janez Novak M.D.'},\r\n              {value: 10, date: '2020-07-18T10:38:24.873+01:00', class: 'hr', composer: 'Janez Novak M.D.'}\r\n            ]\r\n          },\r\n          {\r\n            titleLong: 'Hb',\r\n            latestValue: {value: 100, date: '2020-07-21T10:54:39.274+01:00', composer: 'Vanessa Pereira'},\r\n            range: {minValue: 90, referenceValue: 0},\r\n            historicValues: [\r\n              {value: 100, date: '2020-07-15T10:38:24.873+01:00', class: 'mr', composer: 'Janez Novak M.D.'},\r\n              {value: 180, date: '2020-07-16T10:38:24.873+01:00', class: 'hr', composer: 'Janez Novak M.D.'},\r\n              {value: 80, date: '2020-07-19T10:38:24.873+01:00', class: 'lmr', composer: 'Janez Novak M.D.'}\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        title: null,\r\n        terminology: 'hemogram',\r\n        date: '2020-07-12T10:01:00+01:00',\r\n        items: [\r\n          {\r\n            titleLong: 'Glucose',\r\n            unit: 'μmol/L',\r\n            latestValue: {value: 3.7, date: '2020-07-21T10:54:39.274+01:00', icon: 'trend-down', composer: 'Vanessa Pereira'},\r\n            range: {minValue: 1, maxValue: 4, referenceValue: 0},\r\n            historicValues: [\r\n              {value: 30, date: '2020-07-19T10:38:24.873+01:00', class: 'hr', composer: 'Janez Novak M.D.'}\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        title: 'Urinalysis',\r\n        terminology: 'Urinalysis',\r\n        date: '2020-07-12T10:01:00+01:00',\r\n        items: [\r\n          {\r\n            titleLong: 'L',\r\n            latestValue: {value: 5.7, composer: 'Janez Novak M.D.', date: '2020-07-19T10:38:24.873+01:00', composer: 'Vanessa Pereira'},\r\n            range: {minValue: -10, maxValue: 10, referenceValue: 0},\r\n            historicValues: [\r\n              {value: 30, date: '2020-07-21T10:54:39.274+01:00', composer: 'Janez Novak M.D.'}\r\n            ]\r\n          },\r\n          {\r\n            titleLong: 'E',\r\n            latestValue: {value: 3.9, icon: 'trend-up', class: 'hr', composer: 'Vanessa Pereira'},\r\n            range: {minValue: 0, maxValue: 60},\r\n            historicValues: [\r\n              {value: -2, date: '2020-07-19T10:38:24.873Z', class: 'hr', composer: 'Janez Novak M.D.'},\r\n              {value: -1, date: '2020-07-20T10:38:24.873Z', class: 'hr', composer: 'Janez Novak M.D.'},\r\n              {value: 0, date: '2020-07-21T10:38:24.873Z', class: 'mr', composer: 'Janez Novak M.D.'},\r\n              {value: 10, date: '2020-07-21T10:38:24.873Z', class: 'mr', composer: 'Janez Novak M.D.'}\r\n            ]\r\n          },\r\n          {\r\n            titleLong: 'Hb',\r\n            latestValue: {value: 111, icon: 'trend-up', date: '2020-07-15T10:38:24.873Z', composer: 'Vanessa Pereira'},\r\n            range: {minValue: 1, maxValue: 1000},\r\n            historicValues: [\r\n              {value: 100, date: '2020-07-15T10:38:24.873Z', class: 'hr', composer: 'Janez Novak M.D.', icon: 'trend-down'},\r\n              {value: 180, date: '2020-07-16T10:38:24.873Z', class: 'hr', composer: 'Janez Novak M.D.', icon: 'trend-up'},\r\n              {value: 80, date: '2020-07-19T10:38:24.873Z', class: 'hr', composer: 'Janez Novak M.D.', icon: 'trend-down'}\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n    */\r\n}\r\n"}]}