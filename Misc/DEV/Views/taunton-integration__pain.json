{"name":"taunton-integration::pain","category":"view","description":"pain information","metaData":"{\r\n    \"parameters\": [\r\n        {\r\n            \"name\": \"ehrId\",\r\n            \"description\": \"Ehr id\",\r\n            \"type\": \"string\"\r\n        },\r\n        {\r\n            \"name\": \"dateFrom\",\r\n            \"description\": \"Date from\",\r\n            \"type\": \"string\"\r\n        },\r\n        {\r\n            \"name\": \"dateTo\",\r\n            \"description\": \"Date to\",\r\n            \"type\": \"string\"\r\n        }\r\n    ]\r\n}","steps":[{"processorName":"js","processorData":"// Pain Widget Section View v1.1.0\r\n// Template required: NHS Somerset - eObservations & NEWS2 1.0.0\r\n// Authors: Tomaz Kenda (tomazk@better.care), Vanessa Pereira (vanessap@better.care)\r\n\r\nfunction compute(ctx, src) {\r\n    var promises = {\r\n        pain: Ehr.query({\r\n            aql: \"SELECT \" +\r\n                \"a_j/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/magnitude as painMovementScore, \" +\r\n                \"a_j/data[at0001]/events[at0002]/data[at0003]/items[at0006]/value/value as painMovementScoreInterpretation, \" +\r\n                \"a_j/data[at0001]/events[at0002]/data[at0003]/items[at0006]/value/defining_code/code_string as painMovementScoreInterpretationCode, \" +\r\n                \"a_j/data[at0001]/events[at0002]/time/value as painMovementTime, \" +\r\n                \"a_j/data[at0001]/events[at0002]/data[at0003]/items[at0004]/null_flavour as painMovementNullFlavour, \" +\r\n                \"a/name/value as templateName, \" +\r\n                \"a/archetype_details/template_id/value as templateId, \" +\r\n                \"a/uid/value as compositionUid, \" +\r\n                \"a/context/start_time/value as dateCompositionSubmitted, \" +\r\n                \"a/composer/name as composer \\n\" +\r\n                \"FROM EHR e[ehr_id/value=:ehrId] \\n\" +\r\n                \"CONTAINS COMPOSITION a \" +\r\n                \"CONTAINS OBSERVATION a_j[openEHR-EHR-OBSERVATION.movement_pain.v0] \\n\" +\r\n                \"WHERE \\n\" +\r\n                \"templateId = 'NHS Somerset - eObservations & NEWS2' \\n\" +\r\n                (typeof (ctx.vars.dateFrom) === \"undefined\" || ctx.vars.dateFrom === null ? '' : ' AND dateCompositionSubmitted >= :dateFrom') +\r\n                (typeof (ctx.vars.dateTo) === \"undefined\" || ctx.vars.dateTo === null ? '' : ' AND dateCompositionSubmitted <= :dateTo') +\r\n                \"\\n\"+\r\n                \"ORDER BY dateCompositionSubmitted DESC \\n\" +\r\n                \"offset 0 limit 100 \",\r\n                initvalue: [],\r\n                params: ctx.vars,\r\n             callback: function(out, result) {\r\n                out.push(result);\r\n            }\r\n        })\r\n    };\r\n   function evaluate(assessment, prevAssessment) {\r\n        var riskClass, riskText, referenceRange, icon;\r\n        if (!assessment) {\r\n            return null;\r\n        }\r\n        if (assessment.painMovementScore !== null && assessment.painMovementScore !== undefined\r\n         && prevAssessment && prevAssessment.painMovementScore !== null && prevAssessment.painMovementScore !== undefined) {\r\n            if (assessment.painMovementScore !==  prevAssessment.painMovementScore) {\r\n                icon = assessment.painMovementScore > prevAssessment.painMovementScore ? 'trend-up' : 'trend-down';\r\n            }\r\n        }\r\n        switch (assessment.painMovementScore) {\r\n            case 0:\r\n                riskClass = 'lr';\r\n                break;\r\n            case 1:\r\n                riskClass = 'lmr';\r\n                break;\r\n            case 2:\r\n                riskClass = 'mr';\r\n                break;\r\n            case 3: \r\n                riskClass = 'hr';\r\n                break;\r\n        }\r\n\r\n        var value = null;\r\n        if (assessment.painMovementScore !== null && assessment.painMovementScore >= 0) {\r\n            value = assessment.painMovementScore;\r\n        }\r\n\r\n        return value !== null ? {\r\n            'compositionUid': (assessment.compositionUid.split(\"::\"))[0],\r\n            'value': value,\r\n            'sparklineLevel': assessment.painMovementScore >= 0 ? assessment.painMovementScore : null,\r\n            'riskText': assessment.painMovementScoreInterpretation,\r\n            'composer': assessment.composer,\r\n            'class': riskClass,\r\n            'icon': icon,\r\n            'date': assessment.dateCompositionSubmitted\r\n        } : null;\r\n    }\r\n\r\n    var latestValue, historicValues;\r\n    Ehr.allhash(promises, function (res) {\r\n       if (res['pain'] == null || res['pain'].length == 0) {\r\n            latestValue = null;\r\n        } else {\r\n            if (res['pain'].length > 1) {\r\n                latestValue = evaluate(res['pain'][0], res['pain'][1]);\r\n            } else {\r\n                latestValue = evaluate(res['pain'][0]);\r\n            }\r\n            // res['waterlowAssessment'].shift();\r\n            historicValues = res['pain'];\r\n            historicValues = historicValues.map(evaluate).slice(1, 6).filter(Boolean); // Wrap this in try-catch\r\n            historicValues.unshift(latestValue);\r\n        }\r\n    });\r\n\r\n     return latestValue ? {\r\n        'widgetType': 'RISK_STAGE',    // RISK_STAGE | LIST_OF_FORMS | SINGLE_PARAMETER;\r\n        'riskStageType': 'SCORE',\r\n        'titleShort': 'Pain',\r\n        'titleLong': 'Pain on movement',\r\n        'iconSrc': null,\r\n        'sparkline': {\r\n            levels: 4,\r\n            normalLevel: 0\r\n        },\r\n        'moreButtonUrl': null,\r\n        'clickUrl': null,\r\n        'latestValue': latestValue,\r\n        'historicValues': historicValues\r\n    } : null;\r\n}\r\n"}]}