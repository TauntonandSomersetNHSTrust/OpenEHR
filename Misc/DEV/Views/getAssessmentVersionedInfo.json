{"name":"getAssessmentVersionedInfo","category":"view","description":null,"metaData":"{\n    \"parameters\": [\n        {\n            \"name\": \"assessmentVersion\",\n            \"description\": \"\",\n            \"type\": \"string\"\n        }\n    ]\n}","steps":[{"processorName":"js","processorData":"function compute(ctx, src) { \n    var promises = {\n        versionedComposition: Ehr.query({\n            aql: 'SELECT vo/uid/value as versionedUid, ' +\n            '   v/lifecycle_state/value as status, ' +\n            '   v/commit_audit/description/value as comment, ' + \n            '   v/uid/value as uid, ' +\n            '   v/commit_audit/committer/name as creator, ' +\n            '   v/commit_audit/time_committed/value as createTime, ' +\n            '   v/lifecycle_state/value as lifecycleState ' +\n            '   FROM EHR e ' +\n            '   CONTAINS VERSIONED_OBJECT vo ' +\n            '   CONTAINS VERSION v[all_versions] ' +\n            \"   WHERE v/uid/value = :assessmentVersion\",\n            initvalue: [],\n            params: {\n                assessmentVersion: ctx.vars.assessmentVersion\n            },\n            callback: function (out, result) {\n                out.push(result);\n            }\n        })\n    };\n    var result = {};\n    Ehr.allhash(promises, function (res) {\n        result =  res['versionedComposition'];\n    });\n    return result;\n}"}]}