{"name":"GetLastATT_JS","category":"view","description":"Get latest Acute Take Tracker data for all patients  (10-12-2020)","metaData":null,"steps":[{"processorName":"js","processorData":"// v1.0.0 - Original\r\n// v1.0.1 - CHanged to JS view to work around TOP 1 in AQL only returning first composition of a day\r\n\r\nvar ehrIDReplace = \"<ehrid>\";\r\n\t\t\r\nvar getAllCompositionsAQL = \"select DISTINCT e/ehr_id/value as ehr_id \" +\r\n\t\"from EHR e contains \" +\r\n\t\"COMPOSITION a \" +\r\n\t\"contains EVALUATION a_a[openEHR-EHR-EVALUATION.acute_take_tracker.v0] \" +\r\n\t\"offset 0 limit 10000000;\";\r\n\t\r\nvar getMostRecentCompositionAQL = \"select \" +\r\n    \"a/context/start_time/value as created, \" +\r\n    \"e/ehr_id/value as ehr_id, \" +\r\n    \"e/ehr_status/subject/external_ref/id/value as mrn, \" +\r\n    \"a_a/data[at0001]/items[at0002]/items[at0006]/value/value as ReferralSource, \" +\r\n    \"a_a/data[at0001]/items[at0002]/items[at0011]/value/value as SpecificySource, \" +\r\n    \"a_a/data[at0001]/items[at0002]/items[at0012]/value/value as ArrivalLocation, \" +\r\n    \"a_a/data[at0001]/items[at0002]/items[at0019]/value/value as RefferalDetailComment, \" +\r\n    \"a_a/data[at0001]/items[at0003]/items[at0020]/value/value as Diagnosis, \" +\r\n    \"a_a/data[at0001]/items[at0003]/items[at0021]/value/value as RequiresSideRoom, \" +\r\n    \"a_a/data[at0001]/items[at0003]/items[at0024]/value/value as ReasonForSideRoom, \" +\r\n    \"a_a/data[at0001]/items[at0003]/items[at0028]/value/value as OtherReasonForSideRoom, \" +\r\n    \"a_a/data[at0001]/items[at0003]/items[at0029]/value/value as COVID, \" +\r\n    \"a_a/data[at0001]/items[at0003]/items[at0032]/value/value as SeenByJnrDr, \" +\r\n    \"a_a/data[at0001]/items[at0003]/items[at0033]/value/value as DTSeenByJnrDr, \" +\r\n    \"a_a/data[at0001]/items[at0003]/items[at0034]/value/value as SeenByConDr, \" +\r\n    \"a_a/data[at0001]/items[at0003]/items[at0035]/value/value as DTSeenByConDr, \" +\r\n    \"a_a/data[at0001]/items[at0003]/items[at0036]/value/value as VTECompleted, \" +\r\n    \"a_a/data[at0001]/items[at0003]/items[at0037]/value/value as TEPCompleted, \" +\r\n    \"a_a/data[at0001]/items[at0004]/items[at0038]/value/value as ForITUHDU, \" +\r\n    \"a_a/data[at0001]/items[at0004]/items[at0042]/value/value as ForResus, \" +\r\n    \"a_a/data[at0001]/items[at0005]/items[at0046]/value/value as DischargeTransferDestination, \" +\r\n    \"a_a/data[at0001]/items[at0005]/items[at0047]/value/value as HideFromTracker \" +\r\n\t\"from EHR e contains \" +\r\n\t\"COMPOSITION a \" +\r\n\t\"contains EVALUATION a_a[openEHR-EHR-EVALUATION.acute_take_tracker.v0] \" +\r\n\t\"WHERE ehr_id = '<ehrid>' \" +\r\n\t\"order by created desc \" +\r\n\t\"offset 0 limit 1;\";\r\n\r\nfunction generateEhrQuery(aql, params) {\r\n    return Ehr.query({\r\n        aql: aql,\r\n        initvalue: [],\r\n        params: params,\r\n        callback: function(out, result) {\r\n            out.push(result);\r\n        }\r\n    });\r\n}\r\n\r\nfunction getLatestComposition(ehr_id) {\r\n\tvar forms = {};\r\n\tvar promises = {\r\n\t\tcomposition: generateEhrQuery(\r\n\t\t\tgetMostRecentCompositionAQL.replace(ehrIDReplace, ehr_id), \r\n\t\t\t{}\r\n\t\t)\r\n\t};\r\n\tEhr.allhash(promises, function (res) {\r\n\t\tforms = res.composition[0];\r\n\t});\r\n\treturn forms;\r\n}\r\n\r\nfunction getAllCompositions() {\r\n\tvar forms = [];\r\n\tvar promises = {\r\n\t\tcompositions: generateEhrQuery(getAllCompositionsAQL, {})\r\n\t};\r\n\tEhr.allhash(promises, function (res) {\r\n\t\tfor(var i = 0; i < res.compositions.length; i++) {\r\n\t\t\tif(res.compositions[i].ehr_id) {\r\n\t\t\t\tvar comp = getLatestComposition(res.compositions[i].ehr_id);\r\n\t\t\t\tif(comp) {\r\n\t\t\t\t\tforms.push(comp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// forms.array.push(res.compositions[i].ehr_id);\r\n\t\t}\r\n\t});\r\n\t\r\n\tvar parseISOString = function(s) {\r\n\t\t  var b = s.split(/\\D+/);\r\n\t\t  return new Date(Date.UTC(b[0], --b[1], b[2], b[3], b[4], b[5], b[6]));\r\n\t\t};\r\n\t\t\r\n\t\tforms.sort(function(a,b) {\t\t\t\r\n\t\t\tvar da = parseISOString(a.recorded_date).getTime();\r\n\t\t\tvar db = parseISOString(b.recorded_date).getTime();\r\n\t\t\t\r\n\t\t\treturn db-da; // reverse sort\r\n\t\t});\r\n\treturn forms;\r\n}\r\n\r\nfunction compute(ctx, src) {\r\n\treturn getAllCompositions();\r\n}"}]}