{"name":"PBIDashboards::DiabeticFoot_Refactored","category":"view","description":"MRN, Completed DateTime, referrals for latest DIabetic Foot Screening per MRN (28-06-2021)","metaData":"{\r\n    \"parameters\": [\r\n        {\r\n            \"name\": \"last_x_days\",\r\n            \"description\": \"The last X days to show, or 365 if null\",\r\n            \"type\": \"string\"\r\n        }\r\n    ]\r\n}","steps":[{"processorName":"js","processorData":"// v1.0.0 - Haydn Williams - original\r\n// v1.0.1 - Haydn Williams - refactor to avoid bug using TOP 1 Composition\r\n// v1.0.2 - Haydn Williams - Increased default last_x_days to 365 and added global parameter\r\n// v1.0.3 - Bostjan Lah - refactor for single aql, usaga of current_timestamp(:period) and squash for comments\r\n// v1.0.4 - Haydn Williams - Added limit to latest form per patient only\r\n\r\nfunction compute(ctx, src) {\r\n    var formName = \"Diabetic Foot Screening\";\r\n    var offset = '-P' + (ctx.vars.last_x_days ? ctx.vars.last_x_days : '365') + 'D'\r\n    var promises = {\r\n        forms: Ehr.query({\r\n            aql: 'SELECT\\n' +\r\n                'e/ehr_id/value as ehr_id,\\n' +\r\n                'c/uid/value as form_id,\\n' +\r\n                'c/context/start_time/value as recorded_date,\\n' +\r\n                'e/ehr_status/subject/external_ref/id/value as mrn,\\n' +\r\n                'c/content[openEHR-EHR-EVALUATION.paitent_diabetes_foot_screening.v0]/data[at0001]/items[at0027]/items[at0036]/value/value as referral_specialist,\\n' +\r\n                'c/content[openEHR-EHR-EVALUATION.paitent_diabetes_foot_screening.v0]/data[at0001]/items[at0027]/items[at0021]/value/value as referral_inpatient\\n' +\r\n                'FROM EHR e\\n' +\r\n                'CONTAINS COMPOSITION c[openEHR-EHR-COMPOSITION.encounter.v1]\\n' +\r\n                'WHERE c/name/value = \\'' + formName + '\\' ' +\r\n                'AND c/context/start_time >= current_timestamp(:period)\\n' +\r\n                'ORDER BY c/context/start_time DESC LIMIT 1000000',\r\n            params: {\r\n                period: offset\r\n            }\r\n        })\r\n    }\r\n\t\r\n\tvar forms = [];\r\n    var ehrsProcessed = {};\r\n    Ehr.allhash(promises, function (res) {\r\n        var form;\r\n        while (form = res['forms'].shift()) {\r\n            if (ehrsProcessed[form.mrn] !== 1 && form != null) {\r\n\t\t\t\tforms.push({\r\n\t\t\t\t\t\"form_name\": formName,\r\n\t\t\t\t\t\"form_id\": form.form_id,\r\n\t\t\t\t\t\"recorded_date\": form.recorded_date,\r\n\t\t\t\t\t\"patient_mrn\": form.mrn,\r\n\t\t\t\t\t\"referrals\": {\r\n\t\t\t\t\t\t\"inpatient\": form.referral_inpatient,\r\n\t\t\t\t\t\t\"specialist\": form.referral_specialist\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n                ehrsProcessed[form.mrn] = 1;\r\n            }\r\n        }\r\n    })\r\n    return forms;\r\n}\r\n"}]}