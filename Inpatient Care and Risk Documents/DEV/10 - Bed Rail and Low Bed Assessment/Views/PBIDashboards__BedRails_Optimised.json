{"name":"PBIDashboards::BedRails_Optimised","category":"view","description":"mrn, datetime completed, and likely to fall boolean for latest Bed Rail assessment by MRN (17-06-2021)","metaData":"{\r\n    \"parameters\": [\r\n        {\r\n            \"name\": \"last_x_days\",\r\n            \"description\": \"The last X days to show, or 365 if null\",\r\n            \"type\": \"string\"\r\n        }\r\n    ]\r\n}","steps":[{"processorName":"js","processorData":"// v1.0.0 - Haydn Williams - original\r\n// v1.0.1 - Haydn Williams - refactor to avoid bug using TOP 1 Composition\r\n// v1.0.2 - Haydn Williams - Increased default last_x_days to 365 and added global parameter\r\n// v1.0.3 - Haydn Williams - Caught a possible null exception with empty form data being returned\r\n// v1.0.4 - Haydn Williams - Optimisations advised by Better\r\n\r\nvar replaceMe = \"<replace>\";\r\nvar ehrIDReplace = \"<ehrid>\";\r\nvar LASTXDAYS = 365;\r\n\r\nvar formName = \"Bed rail and low bed risk assessment\";\r\n\r\nvar getRecentCompositionsAQL = \"select DISTINCT e/ehr_id/value as ehr_id \" +\r\n\t\"FROM EHR e \" +\r\n\t\"CONTAINS COMPOSITION c[openEHR-EHR-COMPOSITION.encounter.v1] \" +\r\n\t\"WHERE c/name/value = 'About Me' \" +\r\n\t\"AND c/context/start_time/value > '\" + replaceMe + \"' \" +\r\n\t\"offset 0 limit 100000;\";\r\n\t\r\nvar getLatestFormDataAQL = \"SELECT c/uid/value as cuid, \" +\r\n       \"c/name/value, \" +\r\n       \"c/context/start_time/value as completed, \" +\r\n       \"e/ehr_status/subject/external_ref/id/value as mrn, \" +\r\n       \"c/content[openEHR-EHR-OBSERVATION.bed_rails_low_bed_risk_assessment.v0]/data[at0001]/events[at0002]/data[at0003]/items[at0004]/items[at0005]/value/value as unlikely_faller  \" +\r\n\t\t\"FROM EHR e  \" +\r\n\t\t\"CONTAINS COMPOSITION c[openEHR-EHR-COMPOSITION.encounter.v1] \" +\r\n\t\t\"WHERE c/name/value = '\" + formName + \"' \" + \r\n\t\t\"AND e/ehr_id/value = '\" + ehrIDReplace + \"' \" +\r\n\t\t\"ORDER BY c/context/start_time/value DESC  \" +\r\n\t\t\"LIMIT 1;\";\r\n\t\r\nfunction generateEhrQuery(aql, params) {\r\n    return Ehr.query({\r\n        aql: aql,\r\n        initvalue: [],\r\n        params: params,\r\n        callback: function(out, result) {\r\n            out.push(result);\r\n        }\r\n    });\r\n}\t\r\n\t\r\nfunction getFromDate(ctx) {\r\n\tvar x = LASTXDAYS;\r\n\tif(ctx && ctx.vars){\r\n\t\tx = ctx.vars.last_x_days;\r\n\t\tif(!x || x == \"\") {\r\n\t\t\tx = ctx.vars.last_x_days = LASTXDAYS;\r\n\t\t}\r\n\t}\r\n\t\r\n\tvar oldDate = null;\r\n\tvar d = new Date();\r\n\toldDate = new Date(d.setDate(d.getDate() - x));\r\n\treturn oldDate.toISOString();\r\n}\r\n\r\nfunction getLatestComposition(ehr_id) {\r\n\tvar forms = null;\r\n\tvar promises = {\r\n\t\tcomposition: generateEhrQuery(\r\n\t\t\tgetLatestFormDataAQL.replace(ehrIDReplace, ehr_id), \r\n\t\t\t{}\r\n\t\t)\r\n\t};\r\n\tEhr.allhash(promises, function (res) {\r\n\t\tvar form = res.composition[0];\r\n\t\tif(form) {\r\n\t\t\tforms = {\r\n\t\t\t\t\"form_name\": formName,\r\n\t\t\t\t\"form_id\": form.cuid,\r\n\t\t\t\t\"recorded_date\": form.completed,\r\n\t\t\t\t\"patient_mrn\": form.mrn,\r\n\t\t\t\t\"unlikely_faller\": form.unlikely_faller\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\treturn forms;\r\n}\r\n\t\r\nfunction getRecentCompositions(ctx) {\r\n\tvar fromDate = ''\r\n\tvar dateException = null;\r\n\t\r\n\ttry {\r\n\t\tfromDate = ctx.vars.from_date = getFromDate(ctx);\r\n\t} catch(ex) {\r\n\t\tdateException = ex;\r\n\t}\r\n\t\r\n\tvar query = getRecentCompositionsAQL.replace(replaceMe, fromDate);\r\n\r\n\tvar forms = [];\r\n\tvar promises = {\r\n\t\tcompositions: generateEhrQuery(query, {})\r\n\t};\r\n\t\r\n\ttry {\r\n\t\tEhr.allhash(promises, function (res) {\r\n\t\t\tfor(var i = 0; i < res.compositions.length; i++) {\r\n\t\t\t\tif(res.compositions[i].ehr_id) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tvar comp = getLatestComposition(res.compositions[i].ehr_id);\r\n\t\t\t\t\t\tif(comp) {\r\n\t\t\t\t\t\t\tforms.push(comp);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(ex) {\r\n\t\t\t\t\t\tforms.push({\r\n\t\t\t\t\t\t\tmessage: 'Exception in second call',\r\n\t\t\t\t\t\t\tehr_id: res.compositions[i].ehr_id,\r\n\t\t\t\t\t\t\texception: ex.message\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tvar parseISOString = function(s) {\r\n\t\t  var b = s.split(/\\D+/);\r\n\t\t  return new Date(Date.UTC(b[0], --b[1], b[2], b[3], b[4], b[5], b[6]));\r\n\t\t};\r\n\t\t\r\n\t\tforms.sort(function(a,b) {\t\t\t\r\n\t\t\tvar da = parseISOString(a.recorded_date).getTime();\r\n\t\t\tvar db = parseISOString(b.recorded_date).getTime();\r\n\t\t\t\r\n\t\t\treturn db-da; // reverse sort\r\n\t\t});\r\n\t} catch(ex) {\r\n\t\tforms.push({\r\n\t\t\tmessage: 'Exception in first call',\r\n\t\t\tdate_from: fromDate,\r\n\t\t\tquery: query,\r\n\t\t\texception: ex.message\r\n\t\t});\r\n\t}\r\n\t\r\n\treturn forms;\r\n\t\r\n}\r\n\r\nfunction compute(ctx, src) {\r\n\treturn getRecentCompositions(ctx);\r\n}\r\n\r\n"}]}