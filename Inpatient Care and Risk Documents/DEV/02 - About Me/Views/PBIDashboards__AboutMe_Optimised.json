{"name":"PBIDashboards::AboutMe_Optimised","category":"view","description":"MRN and Completion Date of About Me from the last X days (parameter, or if null defaults to 365) (16-06-2021)","metaData":"{\r\n    \"parameters\": [\r\n        {\r\n            \"name\": \"last_x_days\",\r\n            \"description\": \"The last X days to show, or 365 if null\",\r\n            \"type\": \"string\"\r\n        }\r\n    ]\r\n}","steps":[{"processorName":"js","processorData":"// v1.0.0 - Haydn Williams - original\r\n// v1.0.1 - Haydn Williams - refactor to avoid bug using TOP 1 Composition\r\n// v1.0.2 - Haydn Williams - Increased default last_x_days to 365 and added global parameter\r\n// v1.0.3 - Haydn Williams - Optimised slightly with advice from Better, but a good candidate for Query Stream\r\n\r\nvar replaceMe = \"<replace>\";\r\nvar ehrIDReplace = \"<ehrid>\";\r\nvar LASTXDAYS = 365;\r\n\r\nvar getRecentCompositionsAQL = \"select DISTINCT e/ehr_id/value as ehr_id \" +\r\n\t\"FROM EHR e \" +\r\n\t\"CONTAINS COMPOSITION c[openEHR-EHR-COMPOSITION.encounter.v1] \"\r\n\t\"WHERE c/name/value = 'About Me' \" +\r\n\t\"AND c/context/start_time/value > '\" + replaceMe + \"' \" +\r\n\t\"offset 0 limit 100000;\";\r\n\r\nvar getLatestFormDataAQL = \"SELECT c/uid/value as cuid, \" +\r\n       \"c/context/start_time/value as completed, \" +\r\n       \"e/ehr_status/subject/external_ref/id/value as mrn, \" +\r\n       \"SQUASH(g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Communication']/items[at0009]/items[at0013]/value/value) as com_assessment_findings, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Communication']/items[at0009]/items[at0011]/value/value as com_assessment_other, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Communication']/items[at0015]/items[at0045]/value/value as con_action_comment, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Personal Hygiene']/items[at0009]/items[at0013]/value/value as hyg_assessment_finding, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Personal Hygiene']/items[at0009]/items[at0011]/value/value as hyg_assessment_other, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Personal Hygiene']/items[at0009]/items[at0012]/value/value as hyg_assessment_comment, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Personal Hygiene']/items[at0015]/items[at0027,'Package of Care - Frequency']/value/value as hyg_action_package, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Personal Hygiene']/items[at0015]/items[at0027,'Assistance Of']/value/value as hyg_action_assisstance, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Personal Hygiene']/items[at0015]/items[at0045]/value/value as hyg_action_comment, \" +\r\n       \"SQUASH(g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Nutrition and Hydration']/items[at0009]/items[at0013]/value/value) as nut_assessment_findings, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Nutrition and Hydration']/items[at0009]/items[at0013,'Diabetes Type']/value/value as nut_assessment_diabetes, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Nutrition and Hydration']/items[at0009]/items[at0011]/value/value as nut_assessment_other, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Nutrition and Hydration']/items[at0009]/items[at0012]/value/value as nut_assessment_comment, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Nutrition and Hydration']/items[at0015]/items[at0027,'IDDSI Diet Levels']/value/value as nut_action_diet, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Nutrition and Hydration']/items[at0015]/items[at0027,'IDDSI Fluid Levels']/value/value as nut_action_fluid, \" +\r\n       \"SQUASH(g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Nutrition and Hydration']/items[at0015]/items[at0027, 'Actions']/value/value) as nut_action_actions, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Nutrition and Hydration']/items[at0015]/items[at0045]/value/value as nut_action_comment, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Sleep and Rest']/items[at0009]/items[at0013]/value/value as sleep_assessment_finding, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Sleep and Rest']/items[at0009]/items[at0011]/value/value as sleep_assessment_other, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Sleep and Rest']/items[at0009]/items[at0012]/value/value as sleep_assessment_comment, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Sleep and Rest']/items[at0015]/items[at0027]/value/value as sleep_action_action, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Sleep and Rest']/items[at0015]/items[at0045]/value/value as sleep_action_comment, \" +\r\n       \"SQUASH(g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Elimination']/items[at0009]/items[at0013]/value/value) as elim_assessment_findings, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Elimination']/items[at0009]/items[at0011]/value/value as elim_assessment_other, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Elimination']/items[at0009]/items[at0012]/value/value as elim_assessment_comment, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Elimination']/items[at0015]/items[at0027]/value/value as elim_action_actions, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Elimination']/items[at0015]/items[at0045]/value/value as elim_action_comment, \" +\r\n       \"SQUASH(g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Pain']/items[at0009]/items[at0013]/value/value) as pain_assessment_findings, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Pain']/items[at0009]/items[at0011]/value/value as pain_assessment_other, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Pain']/items[at0009]/items[at0012]/value/value as pain_assessment_comment, \" +\r\n       \"SQUASH(g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Pain']/items[at0015]/items[at0027]/value/value) as pain_action_actions, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Pain']/items[at0015]/items[at0045]/value/value as pain_action_comment, \" +\r\n       \"SQUASH(g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Breathing and Circulation']/items[at0009]/items[at0013]/value/value) as breath_assessment_findings, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Breathing and Circulation']/items[at0009]/items[at0011]/value/value as breath_assessment_other, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Breathing and Circulation']/items[at0009]/items[at0012]/value/value as breath_assessment_comment, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Breathing and Circulation']/items[at0015]/items[at0027]/value/value as breath_action_action, \" +\r\n       \"g/data[at0001]/items[at0006]/items[openEHR-EHR-CLUSTER.generic_assessment.v0,'Breathing and Circulation']/items[at0015]/items[at0045]/value/value as breath_action_comment \" +\r\n\"FROM EHR e \" +\r\n\"CONTAINS COMPOSITION c[openEHR-EHR-COMPOSITION.encounter.v1] \" +\r\n\"CONTAINS EVALUATION g[openEHR-EHR-EVALUATION.generic_assessment_collection.v0] \" +\r\n\"WHERE c/name/value = 'About Me' \" +\r\n\t\"AND e/ehr_id/value = '\" + ehrIDReplace + \"' \" +\r\n\t\"ORDER BY c/context/start_time/value DESC \" +\r\n\t\"LIMIT 1\";\t\r\n\t\r\nfunction generateEhrQuery(aql, params) {\r\n    return Ehr.query({\r\n        aql: aql,\r\n        initvalue: [],\r\n        params: params,\r\n        callback: function(out, result) {\r\n            out.push(result);\r\n        }\r\n    });\r\n}\t\r\n\t\r\nfunction getFromDate(ctx) {\r\n\tvar x = LASTXDAYS;\r\n\tif(ctx && ctx.vars){\r\n\t\tx = ctx.vars.last_x_days;\r\n\t\tif(!x || x == \"\") {\r\n\t\t\tx = ctx.vars.last_x_days = LASTXDAYS;\r\n\t\t}\r\n\t}\r\n\t\r\n\tvar oldDate = null;\r\n\tvar d = new Date();\r\n\toldDate = new Date(d.setDate(d.getDate() - x));\r\n\treturn oldDate.toISOString();\r\n}\r\n\r\nfunction getLatestComposition(ehr_id) {\r\n\tvar forms = {};\r\n\tvar promises = {\r\n\t\tcomposition: generateEhrQuery(\r\n\t\t\tgetLatestFormDataAQL.replace(ehrIDReplace, ehr_id), \r\n\t\t\t{}\r\n\t\t)\r\n\t};\r\n\tEhr.allhash(promises, function (res) {\r\n\t\tvar form = res.composition[0];\r\n\t\tif(!form) {\r\n\t\t\tforms = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tforms = {\r\n\t\t\t\"form_name\": \"About Me\",\r\n\t\t\t\"form_id\": form.cuid,\r\n\t\t\t\"recorded_date\": form.completed,\r\n\t\t\t\"patient_mrn\": form.mrn,\r\n\t\t\t\"communication\": {\r\n\t\t\t\t\"assessment\": {\r\n\t\t\t\t\t\"findings\": form.com_assessment_findings,\r\n\t\t\t\t\t\"other\": form.com_assessment_other\r\n\t\t\t\t},\r\n\t\t\t\t\"action\": {\r\n\t\t\t\t\t\"comment\": form.con_action_comment\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"personal_hygiene\": {\r\n\t\t\t\t\"assessment\": {\r\n\t\t\t\t\t\"findings\": form.hyg_assessment_finding,\r\n\t\t\t\t\t\"other\": form.hyg_assessment_other,\r\n\t\t\t\t\t\"comment\": form.hyg_assessment_comment\r\n\t\t\t\t},\r\n\t\t\t\t\"action\": {\r\n\t\t\t\t\t\"package_of_care\": form.hyg_action_package,\r\n\t\t\t\t\t\"assistance_of\": form.hyg_action_assisstance,\r\n\t\t\t\t\t\"comment\": form.hyg_action_comment\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"nutrition_and_hydration\": {\r\n\t\t\t\t\"assessment\": {\r\n\t\t\t\t\t\"findings\": form.nut_assessment_findings,\r\n\t\t\t\t\t\"diabetes_type\": form.nut_assessment_diabetes,\r\n\t\t\t\t\t\"other\": form.nut_assessment_other,\r\n\t\t\t\t\t\"comment\": form.nut_assessment_comment\r\n\t\t\t\t},\r\n\t\t\t\t\"action\": {\r\n\t\t\t\t\t\"diet_levels\": form.nut_action_diet,\r\n\t\t\t\t\t\"fluid_levels\": form.nut_action_fluid,\r\n\t\t\t\t\t\"actions\": form.nut_action_actions,\r\n\t\t\t\t\t\"comment\": form.nut_action_comment\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"sleep_and_rest\": {\r\n\t\t\t\t\"assessment\": {\r\n\t\t\t\t\t\"findings\": form.sleep_assessment_finding,\r\n\t\t\t\t\t\"other\": form.sleep_assessment_other,\r\n\t\t\t\t\t\"comment\": form.sleep_assessment_comment\r\n\t\t\t\t},\r\n\t\t\t\t\"action\": {\r\n\t\t\t\t\t\"actions\": form.sleep_action_action,\r\n\t\t\t\t\t\"comment\": form.sleep_action_comment\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"elimination\": {\r\n\t\t\t\t\"assessment\": {\r\n\t\t\t\t\t\"findings\": form.elim_assessment_findings,\r\n\t\t\t\t\t\"other\": form.elim_assessment_other,\r\n\t\t\t\t\t\"comment\": form.elim_assessment_comment\r\n\t\t\t\t},\r\n\t\t\t\t\"action\": {\r\n\t\t\t\t\t\"actions\": form.elim_action_actions,\r\n\t\t\t\t\t\"comment\": form.elim_action_comment\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"pain\": {\r\n\t\t\t\t\"assessment\": {\r\n\t\t\t\t\t\"findings\": form.pain_assessment_findings,\r\n\t\t\t\t\t\"other\": form.pain_assessment_other,\r\n\t\t\t\t\t\"comment\": form.pain_assessment_comment\r\n\t\t\t\t},\r\n\t\t\t\t\"action\": {\r\n\t\t\t\t\t\"actions\": form.pain_action_actions,\r\n\t\t\t\t\t\"comment\": form.pain_action_comment\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"breathing_and_circulation\": {\r\n\t\t\t\t\"assessment\": {\r\n\t\t\t\t\t\"findings\": form.breath_assessment_findings,\r\n\t\t\t\t\t\"other\": form.breath_assessment_other,\r\n\t\t\t\t\t\"comment\": form.breath_assessment_comment\r\n\t\t\t\t},\r\n\t\t\t\t\"action\": {\r\n\t\t\t\t\t\"actions\": form.breath_action_action,\r\n\t\t\t\t\t\"comment\": form.breath_action_comment\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n\treturn forms;\r\n}\r\n\t\r\nfunction getRecentCompositions(ctx) {\r\n\tvar fromDate = ''\r\n\tvar dateException = null;\r\n\t\r\n\ttry {\r\n\t\tfromDate = ctx.vars.from_date = getFromDate(ctx);\r\n\t} catch(ex) {\r\n\t\tdateException = ex;\r\n\t}\r\n\t\r\n\tvar query = getRecentCompositionsAQL.replace(replaceMe, fromDate);\r\n\r\n\tvar forms = [];\r\n\tvar promises = {\r\n\t\tcompositions: generateEhrQuery(query, {})\r\n\t};\r\n\t\t\r\n\t//try {\r\n\t\tEhr.allhash(promises, function (res) {\r\n\t\t\tfor(var i = 0; i < res.compositions.length; i++) {\r\n\t\t\t\tif(res.compositions[i].ehr_id) {\r\n\t\t\t\t\t//try {\r\n\t\t\t\t\t\tvar comp = getLatestComposition(res.compositions[i].ehr_id);\r\n\t\t\t\t\t\tif(comp) {\r\n\t\t\t\t\t\t\tforms.push(comp);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t//} catch(ex) {\r\n\t\t\t\t\t//\tforms.push({\r\n\t\t\t\t\t//\t\tmessage: 'Exception in second call',\r\n\t\t\t\t\t//\t\tehr_id: res.compositions[i].ehr_id,\r\n\t\t\t\t\t//\t\texception: ex\r\n\t\t\t\t\t//\t});\r\n\t\t\t\t\t//}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tvar parseISOString = function(s) {\r\n\t\t  var b = s.split(/\\D+/);\r\n\t\t  return new Date(Date.UTC(b[0], --b[1], b[2], b[3], b[4], b[5], b[6]));\r\n\t\t};\r\n\t\t\r\n\t\tforms.sort(function(a,b) {\r\n\t\t\tvar da = -1;\r\n\t\t\tif(a.recorded_date) {\r\n\t\t\t\tda = parseISOString(a.recorded_date).getTime();\r\n\t\t\t}\r\n\r\n\t\t\tvar db = 1;\r\n\t\t\tif(b.recorded_date) {\r\n\t\t\t\tdb = parseISOString(b.recorded_date).getTime();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn db-da; // reverse sort\r\n\t\t});\r\n\t//} catch(ex) {\r\n\t//\tforms.push({\r\n\t//\t\tmessage: 'Exception in first call',\r\n\t//\t\tdate_from: fromDate,\r\n\t//\t\tquery: query,\r\n\t//\t\texception: ex\r\n\t//\t});\r\n\t//}\r\n\t\r\n\treturn forms;\r\n\t\r\n}\r\n\r\nfunction compute(ctx, src) {\r\n\treturn getRecentCompositions(ctx);\r\n}\r\n"}]}