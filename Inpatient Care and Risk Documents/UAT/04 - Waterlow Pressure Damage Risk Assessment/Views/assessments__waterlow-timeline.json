{"name":"assessments::waterlow-timeline","category":"view","description":"Waterlow Assessment Timeline (22-03-2021)","metaData":"{\r\n  \"parameters\": [\r\n      {\r\n          \"name\": \"ehrId\",\r\n          \"type\": \"string\",\r\n          \"description\": \"Ehr id\"\r\n      },\r\n            {\r\n          \"name\": \"dateFrom\",\r\n          \"type\": \"string\",\r\n          \"description\": \"Date from\"\r\n      },\r\n            {\r\n          \"name\": \"dateTo\",\r\n          \"type\": \"string\",\r\n          \"description\": \"Date to\"\r\n      }\r\n  ]\r\n}","steps":[{"processorName":"js","processorData":"// Assessments Waterlow Timeline View v1.0.4\r\n// Template required: \"Waterlow pressure damage risk assessment\" v1.0.0\r\n// v1.0.2 - 27-11-2020 - Neuro no longer limited to 6\r\n// v1.0.3 - 15-03-2021 - Skin Type/Broken had the wrong AQL path\r\n// v1.0.4 - 22-03-2021 - Removed limitation of several Skin conditions to only sum a total of 1.\r\n\r\nfunction compute(ctx, src)\r\n{\r\n    var promises = {\r\n        waterlowAssessment: Ehr.query({\r\n            aql: \"select\\n\"+\r\n            \"    c/context/start_time/value as dateCompositionSubmitted,\\n\"+\r\n            \"    a_a/data[at0001]/origin/value as dateTime,\\n\"+\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0014]/value/magnitude as waterlowScore,\\n\"+\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0015]/value/value as riskGrade,\\n\"+\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0015]/value/symbol/value as riskGradeDiscription,\\n\"+\r\n            \"    b_a/data[at0002]/events[at0003]/data[at0001]/items[at0004]/value/magnitude as bodyWeight,\\n\"+\r\n            \"    b_a/data[at0002]/events[at0003]/data[at0001]/items[at0004]/value/units as bodyWeightUnits,\\n\"+\r\n            \"    b_b/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/magnitude as bodyHeight,\\n\"+\r\n            \"    b_b/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/units as bodyHeightUnits,\\n\"+\r\n            \"    bmi/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/magnitude as bmiValue,\\n\"+\r\n            \"    bmi/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/units as bmiUnits,\\n\"+\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/value as bmiScore,\\n\"+\r\n\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0005]/value/value as continenceScore,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0066]/items[at0116]/value/value as healthySKINTYPE,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0066]/items[at0117]/value/value as tissuePapperSKINTYPE,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0066]/items[at0118]/value/value as drySKINTYPE,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0066]/items[at0119]/value/value as oedematousSKINTYPE,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0066]/items[at0120]/value/value as clammySKINTYPE,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0066]/items[at0121]/value/value as discolouredSKINTYPE,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0066]/items[at0164]/value/value as brokenSpotsSKINTYPE,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0007]/value/value as mobility,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0008]/value/value as sex,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0009]/value/value as ageGroup,\\n\" +\r\n\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0129]/items[at0044]/value/value as appetite,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0129]/items[at0054]/value/value as weightLoss,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0070]/items[at0123]/value/value as terminalCachexiaTISSUEMALNUTRITION,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0070]/items[at0124]/value/value as singleOrganFailureTISSUEMALNUTRITION,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0070]/items[at0125]/value/value as multipleOrganFailureTISSUEMALNUTRITION,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0070]/items[at0126]/value/value as peripheralVascularDiseaseTISSUEMALNUTRITION,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0070]/items[at0127]/value/value as anaemiaTISSUEMALNUTRITION,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0070]/items[at0128]/value/value as smokingTISSUEMALNUTRITION,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0073]/items[at0150]/value/value as diabetesNEUROLOGICALDEFICIT,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0073]/items[at0151]/value/value as motorSensoryNEUROLOGICALDEFICIT,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0073]/items[at0152]/value/value as paraplegiaNEUROLOGICALDEFICIT,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0068]/items[at0156]/value/value as majorSurgeryTrauma,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0067]/items[at0106]/value/value as cytotoxicsMEDICATION,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0067]/items[at0107]/value/value as steroidsMEDICATION,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0067]/items[at0108]/value/value as antiInflammatoriesMEDICATION,\\n\" +\r\n            \"    a_a/data[at0001]/events[at0002]/data[at0003]/items[at0067]/items[at0140]/value/value as combinedMEDICATION,\\n \" +\r\n            \r\n            \"    c/name/value as templateName,\\n\"+\r\n            \"    c/archetype_details/template_id/value as templateId,\\n\"+\r\n            \"    c/uid/value as compositionUid   \\n\"+\r\n            \"from EHR e [ehr_id/value=:ehrId]\\n\"+\r\n            \"contains COMPOSITION c\\n\"+\r\n            \"contains ((\\n\"+\r\n            \"    OBSERVATION a_a[openEHR-EHR-OBSERVATION.waterlow_score.v0] and OBSERVATION bmi[openEHR-EHR-OBSERVATION.body_mass_index.v2])\\n\"+\r\n            \"    OR (OBSERVATION b_a[openEHR-EHR-OBSERVATION.body_weight.v2] and\\n\"+\r\n            \"    OBSERVATION b_b[openEHR-EHR-OBSERVATION.height.v2]))\\n\"+\r\n            \"    \\n\"+\r\n            \"where\\n\"+\r\n            \"    c/name/value='Waterlow pressure damage risk assessment'\\n\"+\r\n            (typeof (ctx.vars.dateFrom) === \"undefined\" || ctx.vars.dateFrom === null ? \r\n            '' : \r\n            '    AND dateCompositionSubmitted >= :dateFrom') +\r\n            (typeof (ctx.vars.dateTo) === \"undefined\" || ctx.vars.dateTo === null ? \r\n            '' : \r\n            '    AND dateCompositionSubmitted <= :dateTo') +\r\n            \"\\n\"+\r\n            \"order by dateCompositionSubmitted desc\\n\"+\r\n            \"\"\r\n            ,\r\n            initvalue: [],\r\n            params: ctx.vars,\r\n            callback: function(out, result) {\r\n                out.push(result);\r\n            }\r\n        })\r\n    };\r\n\r\n    // TimelineMeasurementGroup\r\n    function createMeasurementGroup(title, subtitle, icon, measurements) {\r\n        return {\r\n            \"title\": title,\r\n            \"subtitle\": subtitle,\r\n            // \"icon\": icon,\r\n            measurements: measurements\r\n        };\r\n    }\r\n    function addMeasurementToGroup(measurement, group) {\r\n        group['measurements'].push(measurement);\r\n    }\r\n    var tmgWeight = createMeasurementGroup(\"Weight\", \"(kg)\", null, []);\r\n    var tmgHeight = createMeasurementGroup(\"Height\", \"(cm)\", null, []);\r\n    var tmgBMI = createMeasurementGroup(\"BMI\", \"(kg/mÂ²)\", null, []);\r\n    var tmgBMIscore = createMeasurementGroup(\"BMI score\", \"(score)\", null, []);\r\n    var tmgContinence = createMeasurementGroup(\"Continence\", \"(score)\", null, []);\r\n    var tmgSTVA = createMeasurementGroup(\"Skin type / visual risk areas\", \"(score)\", null, []);\r\n    var tmgMobility = createMeasurementGroup(\"Mobility\", \"(score)\", null, []);\r\n    // var tmgSex = createMeasurementGroup(\"Sex\", \"(score)\", null, []);\r\n    // var tmgAge = createMeasurementGroup(\"Age\", \"(score)\", null, []);\r\n    var tmgSexAge = createMeasurementGroup(\"Sex / age\", \"(score)\", null, []);\r\n    // var tmgAppetite = createMeasurementGroup(\"Appetite\", \"(score)\", null, []);\r\n    // var tmgWeightloss = createMeasurementGroup(\"Weight loss\", \"(score)\", null, []);\r\n    var tmgNutritionalRisk = createMeasurementGroup(\"Nutritional risk\", \"(score)\", null, []);\r\n    var tmgTissueMalnutrition = createMeasurementGroup(\"Tissue malnutrition\", \"(score)\", null, []);\r\n    var tmgNeurologicalDeficit = createMeasurementGroup(\"Neurological deficit\", \"(score)\", null, []);\r\n    var tmgMSOT = createMeasurementGroup(\"Major spinal surgery or trauma\", \"(score)\", null, []);\r\n    var tmgMedication = createMeasurementGroup(\"Medication\", \"(score)\", null, []);\r\n\r\n    // TimelineMeasurement\r\n    function createTimelineMeasurement(compositionUid, value, unit, date) {\r\n        return {\r\n            compositionUid: compositionUid,\r\n            type: \"number\",\r\n            value: {\r\n                value: value,\r\n                unit: unit\r\n            },\r\n            date: date\r\n        };\r\n    }\r\n    function createTimelineEvaluationMeasurement(compositionUid, value, unit, date, class_, riskText, referenceRange) {\r\n        return {\r\n            compositionUid: compositionUid,\r\n            type: \"evaluation\",\r\n            value: {\r\n                value: value,\r\n                unit: unit\r\n            },\r\n            date: date,\r\n            \r\n            class: class_,\r\n            riskText: riskText,\r\n            referenceRange: referenceRange\r\n        };\r\n    }\r\n\r\n    function evaluateRoot(assessment) {\r\n        var riskClass, riskText, referenceRange;\r\n\r\n        if (assessment.waterlowScore <= 0) {\r\n            riskClass = \"lr\";\r\n            riskText = \"Low risk\";\r\n            referenceRange = '= 0';\r\n        } else if (assessment.waterlowScore <= 9) {\r\n            riskClass = \"lr\";\r\n            riskText = \"Low risk\";\r\n            referenceRange = '1 - 9';\r\n        } else if (assessment.waterlowScore <= 14) {\r\n            riskClass = \"mr\";\r\n            riskText = \"At risk\";\r\n            referenceRange = '10 - 14';\r\n        } else if (assessment.waterlowScore <= 19) {\r\n            riskClass = \"hr\";\r\n            riskText = \"High risk\";\r\n            referenceRange = '15 - 19';\r\n        } else {\r\n            riskClass = \"vhr\";\r\n            riskText = \"Very high risk\";\r\n            referenceRange = '20 - 64';\r\n        }\r\n\r\n        return {\r\n            'type': \"evaluation\",\r\n            'compositionUid': (assessment.compositionUid.split(\"::\"))[0],\r\n            'value': {\r\n                value: assessment.waterlowScore\r\n            },\r\n            'date': assessment.dateCompositionSubmitted,\r\n            'class': riskClass,\r\n            'riskText': riskText,\r\n            'referenceRange': referenceRange\r\n        };\r\n    }\r\n\r\n    function evaluateWeight(assessment) {\r\n        var compositionUid = (assessment.compositionUid.split(\"::\"))[0];\r\n        return createTimelineMeasurement(compositionUid, assessment.bodyWeight, '', assessment.dateCompositionSubmitted);\r\n    }\r\n\r\n    function evaluateHeight(assessment) {\r\n        var compositionUid = (assessment.compositionUid.split(\"::\"))[0];\r\n        return createTimelineMeasurement(compositionUid, assessment.bodyHeight, '', assessment.dateCompositionSubmitted);\r\n    }\r\n\r\n    function evaluateBMI(assessment) {\r\n        var compositionUid = (assessment.compositionUid.split(\"::\"))[0];\r\n        return createTimelineMeasurement(compositionUid, assessment.bmiValue, '', assessment.dateCompositionSubmitted);\r\n    }\r\n\r\n    function evaluateBMIscore(assessment) {\r\n        var compositionUid = (assessment.compositionUid.split(\"::\"))[0];\r\n        return createTimelineMeasurement(compositionUid, assessment.bmiScore, '', assessment.dateCompositionSubmitted);\r\n    }\r\n\r\n    function evaluateContinence(assessment) {\r\n        var compositionUid = (assessment.compositionUid.split(\"::\"))[0];\r\n        return createTimelineMeasurement(compositionUid, assessment.continenceScore, '', assessment.dateCompositionSubmitted);\r\n    }\r\n\r\n    function evaluateSTVA(assessment) {\r\n        var compositionUid = (assessment.compositionUid.split(\"::\"))[0];\r\n\r\n        var sum1 = 0;\r\n        var tissuePapperSKINTYPE = parseInt(assessment.tissuePapperSKINTYPE);\r\n        var drySKINTYPE = parseInt(assessment.drySKINTYPE);\r\n        var oedematousSKINTYPE = parseInt(assessment.oedematousSKINTYPE);\r\n        var clammySKINTYPE = parseInt(assessment.clammySKINTYPE);\r\n        if (!isNaN(tissuePapperSKINTYPE)) sum1 += tissuePapperSKINTYPE;\r\n        if (!isNaN(drySKINTYPE)) sum1 += drySKINTYPE;\r\n        if (!isNaN(oedematousSKINTYPE)) sum1 += oedematousSKINTYPE;\r\n        if (!isNaN(clammySKINTYPE)) sum1 += clammySKINTYPE;\r\n        // sum1 = Math.min(sum1, 1); // no longer limiting to 1 - 2021-03-22 - Haydn Williams\r\n\r\n        var sum = sum1;\r\n        var healthySKINTYPE = parseInt(assessment.healthySKINTYPE);\r\n        var discolouredSKINTYPE = parseInt(assessment.discolouredSKINTYPE);\r\n        var brokenSpotsSKINTYPE = parseInt(assessment.brokenSpotsSKINTYPE);\r\n        if (!isNaN(healthySKINTYPE)) sum += healthySKINTYPE;\r\n        if (!isNaN(discolouredSKINTYPE)) sum += discolouredSKINTYPE;\r\n        if (!isNaN(brokenSpotsSKINTYPE)) sum += brokenSpotsSKINTYPE;\r\n        \r\n        return createTimelineMeasurement(compositionUid, sum, '', assessment.dateCompositionSubmitted);\r\n    }\r\n\r\n    function evaluateMobility(assessment) {\r\n        var compositionUid = (assessment.compositionUid.split(\"::\"))[0];\r\n        return createTimelineMeasurement(compositionUid, assessment.mobility, '', assessment.dateCompositionSubmitted);\r\n    }\r\n\r\n    function evaluateSex(assessment) {\r\n        var compositionUid = (assessment.compositionUid.split(\"::\"))[0];\r\n        return createTimelineMeasurement(compositionUid, assessment.sex, '', assessment.dateCompositionSubmitted);\r\n    }\r\n\r\n    function evaluateAge(assessment) {\r\n        var compositionUid = (assessment.compositionUid.split(\"::\"))[0];\r\n        return createTimelineMeasurement(compositionUid, assessment.ageGroup, '', assessment.dateCompositionSubmitted);\r\n    }\r\n\r\n    function evaluateSexAge(assessment) {\r\n        var compositionUid = (assessment.compositionUid.split(\"::\"))[0];\r\n        return createTimelineMeasurement(compositionUid, parseInt(assessment.ageGroup) + parseInt(assessment.sex), '', assessment.dateCompositionSubmitted);\r\n    }\r\n\r\n    function evaluateAppetite(assessment) {\r\n        var compositionUid = (assessment.compositionUid.split(\"::\"))[0];\r\n        return createTimelineMeasurement(compositionUid, assessment.appetite, '', assessment.dateCompositionSubmitted);\r\n    }\r\n\r\n    function evaluateWeightloss(assessment) {\r\n        var compositionUid = (assessment.compositionUid.split(\"::\"))[0];\r\n        return createTimelineMeasurement(compositionUid, assessment.weightLoss, '', assessment.dateCompositionSubmitted);\r\n    }\r\n\r\n    function evaluateNutritionalRisk(assessment) {\r\n        var compositionUid = (assessment.compositionUid.split(\"::\"))[0];\r\n        return createTimelineMeasurement(compositionUid, parseInt(assessment.appetite) + parseInt(assessment.weightLoss), '', assessment.dateCompositionSubmitted);\r\n    }\r\n\r\n    function evaluateTissueMalnutrition(assessment) {\r\n        var compositionUid = (assessment.compositionUid.split(\"::\"))[0];\r\n        var sum = 0;\r\n        var terminalCachexiaTISSUEMALNUTRITION = parseInt(assessment.terminalCachexiaTISSUEMALNUTRITION);\r\n        var singleOrganFailureTISSUEMALNUTRITION = parseInt(assessment.singleOrganFailureTISSUEMALNUTRITION);\r\n        var multipleOrganFailureTISSUEMALNUTRITION = parseInt(assessment.multipleOrganFailureTISSUEMALNUTRITION);\r\n        var peripheralVascularDiseaseTISSUEMALNUTRITION = parseInt(assessment.peripheralVascularDiseaseTISSUEMALNUTRITION);\r\n        var anaemiaTISSUEMALNUTRITION = parseInt(assessment.anaemiaTISSUEMALNUTRITION);\r\n        var smokingTISSUEMALNUTRITION = parseInt(assessment.smokingTISSUEMALNUTRITION);\r\n        if (!isNaN(terminalCachexiaTISSUEMALNUTRITION)) sum += terminalCachexiaTISSUEMALNUTRITION;\r\n        if (!isNaN(singleOrganFailureTISSUEMALNUTRITION)) sum += singleOrganFailureTISSUEMALNUTRITION;\r\n        if (!isNaN(multipleOrganFailureTISSUEMALNUTRITION)) sum += multipleOrganFailureTISSUEMALNUTRITION;\r\n        if (!isNaN(peripheralVascularDiseaseTISSUEMALNUTRITION)) sum += peripheralVascularDiseaseTISSUEMALNUTRITION;\r\n        if (!isNaN(anaemiaTISSUEMALNUTRITION)) sum += anaemiaTISSUEMALNUTRITION;\r\n        if (!isNaN(smokingTISSUEMALNUTRITION)) sum += smokingTISSUEMALNUTRITION;\r\n        return createTimelineMeasurement(compositionUid, sum, '', assessment.dateCompositionSubmitted);\r\n    }\r\n\r\n    function evaluateNeurologicalDeficit(assessment) {\r\n        var compositionUid = (assessment.compositionUid.split(\"::\"))[0];\r\n        var sum = 0;\r\n        var diabetesNEUROLOGICALDEFICIT = parseInt(assessment.diabetesNEUROLOGICALDEFICIT);\r\n        var motorSensoryNEUROLOGICALDEFICIT = parseInt(assessment.motorSensoryNEUROLOGICALDEFICIT);\r\n        var paraplegiaNEUROLOGICALDEFICIT = parseInt(assessment.paraplegiaNEUROLOGICALDEFICIT);\r\n        if (!isNaN(diabetesNEUROLOGICALDEFICIT)) sum += diabetesNEUROLOGICALDEFICIT;\r\n        if (!isNaN(motorSensoryNEUROLOGICALDEFICIT)) sum += motorSensoryNEUROLOGICALDEFICIT;\r\n        if (!isNaN(paraplegiaNEUROLOGICALDEFICIT)) sum += paraplegiaNEUROLOGICALDEFICIT;\r\n        return createTimelineMeasurement(compositionUid, sum, '', assessment.dateCompositionSubmitted);\r\n    }\r\n\r\n    function evaluateMSOT(assessment) {\r\n        var compositionUid = (assessment.compositionUid.split(\"::\"))[0];\r\n        return createTimelineMeasurement(compositionUid, assessment.majorSurgeryTrauma, '', assessment.dateCompositionSubmitted);\r\n    }\r\n\r\n    function evaluateMedication(assessment) {\r\n        var compositionUid = (assessment.compositionUid.split(\"::\"))[0];\r\n        var sum = 0;\r\n        var cytotoxicsMEDICATION = parseInt(assessment.cytotoxicsMEDICATION);\r\n        var steroidsMEDICATION = parseInt(assessment.steroidsMEDICATION);\r\n        var antiInflammatoriesMEDICATION = parseInt(assessment.antiInflammatoriesMEDICATION);\r\n        var combined = parseInt(assessment.combinedMEDICATION);\r\n        if (!isNaN(cytotoxicsMEDICATION)) sum += cytotoxicsMEDICATION;\r\n        if (!isNaN(steroidsMEDICATION)) sum += steroidsMEDICATION;\r\n        if (!isNaN(antiInflammatoriesMEDICATION)) sum += antiInflammatoriesMEDICATION;\r\n        if (!isNaN(combined )) sum += combined ;\r\n        sum = Math.min(sum, 4);\r\n        return createTimelineMeasurement(compositionUid, sum, '', assessment.dateCompositionSubmitted);\r\n    }\r\n\r\n    // Add measurements to timeline and groups\r\n    Ehr.allhash(promises, function(res) {\r\n        var assessments = res['waterlowAssessment'];\r\n        if (assessments == null || assessments.length == 0) {\r\n            tMeasurements = null;\r\n        } else {\r\n            // Filter out all null values: .filter(function (el) { return el != null; })\r\n            tMeasurements = assessments.map(evaluateRoot); // Wrap this in try-catch\r\n            tmgWeight['measurements'] = assessments.map(evaluateWeight);\r\n            tmgHeight['measurements'] = assessments.map(evaluateHeight);\r\n            tmgBMI['measurements'] = assessments.map(evaluateBMI);\r\n            \r\n            tmgBMIscore['measurements'] = assessments.map(evaluateBMIscore);\r\n            tmgContinence['measurements'] = assessments.map(evaluateContinence);\r\n            tmgSTVA['measurements'] = assessments.map(evaluateSTVA);\r\n            tmgMobility['measurements'] = assessments.map(evaluateMobility);\r\n            // tmgSex['measurements'] = assessments.map(evaluateSex);\r\n            // tmgAge['measurements'] = assessments.map(evaluateAge);\r\n            tmgSexAge['measurements'] = assessments.map(evaluateSexAge);\r\n            // tmgAppetite['measurements'] = assessments.map(evaluateAppetite);\r\n            // tmgWeightloss['measurements'] = assessments.map(evaluateWeightloss);\r\n            tmgNutritionalRisk['measurements'] = assessments.map(evaluateNutritionalRisk);\r\n            tmgTissueMalnutrition['measurements'] = assessments.map(evaluateTissueMalnutrition);\r\n            tmgNeurologicalDeficit['measurements'] = assessments.map(evaluateNeurologicalDeficit);\r\n            tmgMSOT['measurements'] = assessments.map(evaluateMSOT);\r\n            tmgMedication['measurements'] = assessments.map(evaluateMedication);\r\n        }\r\n    });\r\n\r\n    // Timeline\r\n    var t = {\r\n        \"title\": \"Waterlow pressure damage risk assessment\",\r\n        \"subtitle\": \"(scores)\",\r\n        // \"icon\": null,\r\n        measurements: tMeasurements,\r\n        measurementGroups: [ tmgWeight, tmgHeight, tmgBMI, tmgBMIscore, tmgContinence, tmgSTVA, tmgMobility, /*tmgSex, tmgAge,*/ tmgSexAge, /*tmgAppetite, tmgWeightloss,*/ tmgNutritionalRisk, tmgTissueMalnutrition, tmgNeurologicalDeficit, tmgMSOT, tmgMedication ]\r\n    }\r\n\r\n    return t;\r\n}\r\n"}]}