{"name":"taunton-integration::moving-and-handling","category":"view","description":"Moving and hnadling Widget","metaData":"{\r\n  \"parameters\": [\r\n      {\r\n          \"name\": \"ehrId\",\r\n          \"type\": \"string\",\r\n          \"description\": \"Ehr id\"\r\n      },\r\n      {\r\n          \"name\": \"dateFrom\",\r\n          \"type\": \"string\",\r\n          \"description\": \"Date From\"\r\n      }\r\n  ]\r\n}","steps":[{"processorName":"js","processorData":"// Moving and Handling Widget - v1.0.1\r\n//HW - 1.0.1 - return null if dateFrom not provided\r\n\r\nfunction compute(ctx, src) {\r\n    var promises = {\r\n        movingHandling: Ehr.query({\r\n            aql: \"SELECT \" +\r\n                    \"a_a/data[at0001]/items[at0015]/value/value as riskLevel, \" + \r\n                    \"a_a/data[at0001]/items[at0015]/value/defining_code/code_string as riskLevelCode, \" +\r\n                    \"c/name/value as templateName, \" +\r\n                    \"c/archetype_details/template_id/value as templateId, \" +\r\n                    \"c/uid/value as compositionUid, \" +\r\n                    \"c/context/start_time/value as dateCompositionSubmitted, \" +\r\n                    \"c/composer/name as creator \\n\" +\r\n                \"FROM EHR e[ehr_id/value=:ehrId] \\n\" +\r\n                \"CONTAINS COMPOSITION c \\n\" +\r\n                \"CONTAINS EVALUATION a_a[openEHR-EHR-EVALUATION.patient_handling.v0] \\n\" +\r\n                \"WHERE dateCompositionSubmitted > :dateFrom\\n\"+\r\n                \"ORDER BY dateCompositionSubmitted DESC \\n\" +\r\n                \"LIMIT 1\",\r\n            initvalue: [],\r\n            params: {\r\n              ehrId: ctx.vars.ehrId,\r\n              dateFrom: ctx.vars.dateFrom\r\n            },\r\n            callback: function(out, result) {\r\n                out.push(result);\r\n            }\r\n        })\r\n    };\r\n\r\n    function evaluate(assessment) {\r\n        var riskClass, riskText, referenceRange;\r\n        if (!assessment) {\r\n            return null;\r\n        }\r\n        if (assessment.riskLevelCode === 'at0016') {\r\n            riskClass = 'mr';\r\n        } else if (assessment.riskLevelCode === 'at0017') {\r\n            riskClass = 'lmr';\r\n        } else if (assessment.riskLevelCode === 'at0018') {\r\n            riskClass = 'lr';\r\n        }\r\n        return {\r\n            'compositionUid': (assessment.compositionUid.split(\"::\"))[0],\r\n            'riskText': assessment.riskLevel,\r\n            'composer': assessment.creator,\r\n            'class': riskClass,\r\n            'date': assessment.dateCompositionSubmitted\r\n        };\r\n    }\r\nif(ctx.vars.dateFrom) {\r\n    var latestValue;\r\n    Ehr.allhash(promises, function (res) {\r\n        if (res['movingHandling'] != undefined && res['movingHandling'].length != 0)  {\r\n            if (res['movingHandling'].length) {\r\n                latestValue = evaluate(res['movingHandling'][0]);\r\n            } else {\r\n                latestValue = evaluate(res['movingHandling']);\r\n            }\r\n        }\r\n    });\r\n}\r\n     return latestValue? {\r\n        'widgetType': 'RISK_STAGE',    // RISK_STAGE | LIST_OF_FORMS | SINGLE_PARAMETER;\r\n        'riskStageType': 'SCORE',\r\n        'titleShort': 'Moving and Handling',\r\n        'titleLong': 'MOVING AND HANDLING ASSESSMENT AND CARE PLAN',\r\n        'iconSrc': null,\r\n        'moreButtonUrl': null,\r\n        'clickUrl': null,\r\n        'latestValue': latestValue,\r\n    } : null;\r\n}"}]}