{"name":"BCP::PatientFormData","category":"view","description":"Basic data on form completion for patients in case of Business Continuity Event","metaData":"{\r\n  \"parameters\": [\r\n      {\r\n          \"name\": \"ehrId\",\r\n          \"type\": \"string\",\r\n          \"description\": \"Ehr id\"\r\n      }\r\n  ]\r\n}","steps":[{"processorName":"js","processorData":"// v1.0.0 - UAT candidate\r\n// v1.0.1 - Diabetes Referral value fix\r\n\r\nvar ehrIDReplace = \"<ehrid>\";\r\n\t\t\r\nvar highAQL = \"SELECT c/context/start_time/value as high_completed \" +\r\n\t\t\"FROM EHR e \" + \r\n\t\t\"CONTAINS TOP 1 COMPOSITION c \" +\r\n\t\t\"CONTAINS EVALUATION i[openEHR-EHR-EVALUATION.generic_assessment_collection.v0] \" +\r\n\t\t\"WHERE c/name/value = 'High Impact Risk Assessment' \" +\r\n\t\t\"AND e/ehr_id/value = '<ehrid>' \" +\r\n\t\t\"ORDER BY c/context/start_time/value DESC  \" +\r\n\t\t\"OFFSET 0 LIMIT 100\";\r\n\r\nvar aboutAQL = \"SELECT c/context/start_time/value as about_completed \" +\r\n\t\t\"FROM EHR e \" + \r\n\t\t\"CONTAINS TOP 1 COMPOSITION c \" +\r\n\t\t\"CONTAINS EVALUATION i[openEHR-EHR-EVALUATION.generic_assessment_collection.v0] \" +\r\n\t\t\"WHERE c/name/value = 'About Me' \" +\r\n\t\t\"AND e/ehr_id/value = '<ehrid>' \" +\r\n\t\t\"ORDER BY c/context/start_time/value DESC  \" +\r\n\t\t\"OFFSET 0 LIMIT 100\";\r\n\r\nvar bodyAQL = \"SELECT c/context/start_time/value as body_completed \" +\r\n\t\t\"FROM EHR e \" + \r\n\t\t\"CONTAINS TOP 1 COMPOSITION c \" +\r\n\t\t\"CONTAINS EVALUATION i[openEHR-EHR-EVALUATION.generic_assessment_collection.v0] \" +\r\n\t\t\"WHERE c/name/value = 'Body Map' \" +\r\n\t\t\"AND e/ehr_id/value = '<ehrid>' \" +\r\n\t\t\"ORDER BY c/context/start_time/value DESC  \" +\r\n\t\t\"OFFSET 0 LIMIT 100\";\r\n\t\t\r\nvar waterlowAQL = \"SELECT y/data[at0001]/events[at0002]/data[at0003]/items[at0015]/value/value as waterlow_risk, \" +\r\n\t\t\t\t\t\t   \"y/data[at0001]/events[at0002]/data[at0003]/items[at0014]/value/value as waterlow_score, \" +\r\n\t\t\t\t\t\t   \"c/context/start_time/value as waterlow_completed \" +\r\n\t\t\t\t\t\"FROM EHR e \" +\r\n\t\t\t\t\t\"CONTAINS TOP 1 COMPOSITION c \" +\r\n\t\t\t\t\t\"CONTAINS OBSERVATION y[openEHR-EHR-OBSERVATION.waterlow_score.v0] \" +\r\n\t\t\t\t\t\"WHERE e/ehr_id/value = '<ehrid>' \" +\r\n\t\t\t\t\t\"OFFSET 0 LIMIT 100\";\r\n\t\t\t\t\t\r\nvar diabetesAQL = \"SELECT q/data[at0001]/items[at0028]/items[at0029]/value/value as diabetic_diabetes, \" +\r\n\t\t\t\t\t\t\"q/data[at0001]/items[at0031]/value/value as diabetic_referral, \" +\r\n\t\t\t\t\t\t\"c/context/start_time/value as diabetic_completed \" +\r\n\t\t\t\t\t\"FROM EHR e \" +\r\n\t\t\t\t\t\"CONTAINS TOP 1 COMPOSITION c \" +\r\n\t\t\t\t\t\"CONTAINS EVALUATION q[openEHR-EHR-EVALUATION.paitent_diabetes_foot_screening.v0] \" +\r\n\t\t\t\t\t\"WHERE e/ehr_id/value = '<ehrid>' \" +\r\n\t\t\t\t\t\"OFFSET 0 LIMIT 100\";\r\n\t\t\t\t\t\r\nvar ccpAQL = \"SELECT a/data[at0001]/events[at0002]/data[at0003]/items[at0004]/items[at0005]/value/value as core_risk, \" +\r\n\t\t\t\t\"c/context/start_time/value as core_completed \" +\r\n\t\t\t\"FROM EHR e \" +\r\n\t\t\t\"CONTAINS TOP 1 COMPOSITION c \" +\r\n\t\t\t\"CONTAINS OBSERVATION a[openEHR-EHR-OBSERVATION.ulcer_prevention_management.v0]  \" +\r\n\t\t\t\"WHERE e/ehr_id/value = '<ehrid>' \" +\r\n\t\t\t\"OFFSET 0 LIMIT 100\";\r\n\t\t\t\r\nvar mustAQL = \"SELECT q/data[at0001]/events[at0002]/data[at0003]/items[at0016]/value/value as must_risk, \" +\r\n\t\t\t\t\t   \"q/data[at0001]/events[at0002]/data[at0003]/items[at0015]/value/value as must_score, \" +\r\n\t\t\t\t\t   \"c/context/start_time/value as must_completed \" +\r\n\t\t\t\t\"FROM EHR e \" +\r\n\t\t\t\t\"CONTAINS TOP 1 COMPOSITION c \" +\r\n\t\t\t\t\"CONTAINS OBSERVATION q[openEHR-EHR-OBSERVATION.must.v0] \" +\r\n\t\t\t\t\"WHERE e/ehr_id/value = '<ehrid>' \" +\r\n\t\t\t\t\"OFFSET 0 LIMIT 100\";\r\n\t\t\t\t\r\nvar fallsAQL = \"SELECT k/data[at0002]/items[at0014]/value/value as falls_risk, \" +\r\n\t\t\t\t\t   \"c/context/start_time/value as falls_completed \" +\r\n\t\t\t\t\"FROM EHR e \" +\r\n\t\t\t\t\"CONTAINS TOP 1 COMPOSITION c \" +\r\n\t\t\t\t\"CONTAINS EVALUATION k[openEHR-EHR-EVALUATION.patient_falls_risk.v0]  \" +\r\n\t\t\t\t\"WHERE e/ehr_id/value = '<ehrid>' \" +\r\n\t\t\t\t\"OFFSET 0 LIMIT 100\";\r\n\t\t\t\t\r\nvar movingAQL = \"SELECT c/context/start_time/value as moving_completed, \" +\r\n\t\t\"f/data[at0001]/items[at0015]/value/value as moving_risk, \" +\r\n\t\t\"f/data[at0001]/items[at0014]/value/value as moving_independent, \" +\r\n\t\t\"SQUASH(f/data[at0001]/items[at0019]/items[at0020,'Moving and Handling Task - Moving Up or Down the bed']/items[at0049]/value) as moving_equipment \" +\r\n\t\t\"FROM EHR e \" +\r\n\t\t\"CONTAINS TOP 1 COMPOSITION c[openEHR-EHR-COMPOSITION.encounter.v1] \" +\r\n\t\t\"CONTAINS EVALUATION f[openEHR-EHR-EVALUATION.patient_handling.v0] \" +\r\n\t\t\"WHERE c/name/value = 'Moving and Handling Assessment and Care Plan'\" +\r\n\t\t\"AND e/ehr_id/value = '<ehrid>'\" +\r\n\t\t\"ORDER BY c/context/start_time/value DESC \" +\r\n\t\t\"LIMIT 100;\";\r\n\r\nvar railsAQL = \"SELECT u/data[at0001]/events[at0002]/data[at0003]/items[at0009]/items[at0019]/value/value as rails_guidance, \" +\r\n\t\t\t\t\t   \"c/context/start_time/value as rails_completed \" +\r\n\t\t\t\t\"FROM EHR e \" +\r\n\t\t\t\t\"CONTAINS TOP 1 COMPOSITION c \" +\r\n\t\t\t\t\"CONTAINS OBSERVATION u[openEHR-EHR-OBSERVATION.bed_rails_low_bed_risk_assessment.v0]  \" +\r\n\t\t\t\t\"WHERE e/ehr_id/value = '<ehrid>' \" +\r\n\t\t\t\t\"OFFSET 0 LIMIT 100\";\r\n\r\nfunction getValueOrEmpty(val) {\r\n\treturn val ? val : '';\r\n}\r\n\r\n\r\nfunction processHighRisk(ehrid, baseQuery, results) {\r\n\tvar query = highAQL;\r\n\tbaseQuery.aql = query.replace(ehrIDReplace, ehrid);\r\n\tbaseQuery.callback = function (out, form) {\r\n\t\tresults.high_risk = {\r\n\t\t\tcompleted: form.high_completed\r\n\t\t};\r\n\t};\r\n\t\r\n\tEhr.allhash({forms: Ehr.query(baseQuery)}, function (res) {\t});\r\n\treturn results;\r\n}\r\n\r\nfunction processAboutMe(ehrid, baseQuery, results) {\r\n\tvar query = aboutAQL;\r\n\tbaseQuery.aql = query.replace(ehrIDReplace, ehrid);\r\n\tbaseQuery.callback = function (out, form) {\r\n\t\tresults.about_me = {\r\n\t\t\tcompleted: form.about_completed\r\n\t\t};\r\n\t};\r\n\t\r\n\tEhr.allhash({forms: Ehr.query(baseQuery)}, function (res) {});\r\n\treturn results;\r\n}\r\n\r\nfunction processBodyMap(ehrid, baseQuery, results) {\r\n\tvar query = bodyAQL;\r\n\tbaseQuery.aql = query.replace(ehrIDReplace, ehrid);\r\n\tbaseQuery.callback = function (out, form) {\r\n\t\tresults.body_map = {\r\n\t\t\tcompleted: form.body_completed\r\n\t\t};\r\n\t};\r\n\t\r\n\tEhr.allhash({forms: Ehr.query(baseQuery)}, function (res) {\t});\r\n\treturn results;\r\n}\r\n\r\nfunction processWaterlow(ehrid, baseQuery, results) {\r\n\tvar query = waterlowAQL;\r\n\tbaseQuery.aql = query.replace(ehrIDReplace, ehrid);\r\n\tbaseQuery.callback = function (out, form) {\r\n\t\tresults.waterlow = {\r\n\t\t\tcompleted: form.waterlow_completed,\r\n\t\t\trisk: getValueOrEmpty(form.waterlow_risk),\r\n\t\t\tscore: getValueOrEmpty(form.waterlow_score)\r\n\t\t};\r\n\t};\r\n\t\r\n\tEhr.allhash({forms: Ehr.query(baseQuery)}, function (res) {\t});\r\n\treturn results;\r\n}\r\n\r\nfunction processDiabetes(ehrid, baseQuery, results) {\r\n\tvar query = diabetesAQL;\r\n\tbaseQuery.aql = query.replace(ehrIDReplace, ehrid);\r\n\tbaseQuery.callback = function (out, form) {\r\n\t\tresults.diabetic_foot = {\r\n\t\t\tcompleted: form.diabetic_completed,\r\n\t\t\thas_diabetes: getValueOrEmpty(form.diabetic_diabetes),\r\n\t\t\treferral: getValueOrEmpty(form.diabetic_referral) \r\n\t\t};\r\n\t};\r\n\t\r\n\tEhr.allhash({forms: Ehr.query(baseQuery)}, function (res) {\t});\r\n\treturn results;\r\n}\r\n\r\nfunction processCCP(ehrid, baseQuery, results) {\r\n\tvar query = ccpAQL;\r\n\tbaseQuery.aql = query.replace(ehrIDReplace, ehrid);\r\n\tbaseQuery.callback = function (out, form) {\r\n\t\tresults.core_care_plan = {\r\n\t\t\tcompleted: form.core_completed,\r\n\t\t\trisk: getValueOrEmpty(form.core_risk)\r\n\t\t};\r\n\t};\r\n\t\r\n\tEhr.allhash({forms: Ehr.query(baseQuery)}, function (res) {\t});\r\n\treturn results;\r\n}\r\n\r\nfunction processMUST(ehrid, baseQuery, results) {\r\n\tvar query = mustAQL;\r\n\tbaseQuery.aql = query.replace(ehrIDReplace, ehrid);\r\n\tbaseQuery.callback = function (out, form) {\r\n\t\tresults.must = {\r\n\t\t\tcompleted: form.must_completed,\r\n\t\t\trisk: getValueOrEmpty(form.must_risk),\r\n\t\t\tscore: getValueOrEmpty(form.must_score)\r\n\t\t};\r\n\t};\r\n\t\r\n\tEhr.allhash({forms: Ehr.query(baseQuery)}, function (res) {\t});\r\n\treturn results;\r\n}\r\n\r\nfunction processFalls(ehrid, baseQuery, results) {\r\n\tvar query = fallsAQL;\r\n\tbaseQuery.aql = query.replace(ehrIDReplace, ehrid);\r\n\tbaseQuery.callback = function (out, form) {\r\n\t\tresults.falls = {\r\n\t\t\tcompleted: form.falls_completed,\r\n\t\t\trisk: getValueOrEmpty(form.falls_risk)\r\n\t\t};\r\n\t};\r\n\t\r\n\tEhr.allhash({forms: Ehr.query(baseQuery)}, function (res) {\t});\r\n\treturn results;\r\n}\r\n\r\nfunction processMoving(ehrid, baseQuery, results) {\r\n\tvar query = movingAQL;\r\n\tbaseQuery.aql = query.replace(ehrIDReplace, ehrid);\r\n\tbaseQuery.callback = function (out, form) {\r\n\t\tresults.moving_and_handling = {\r\n\t\t\tcompleted: form.moving_completed,\r\n\t\t\tequipment: getValueOrEmpty(form.moving_equipment).length > 0 ? 'Yes' : 'None',\r\n\t\t\tindependent: getValueOrEmpty(form.moving_independent),\r\n\t\t\trisk: getValueOrEmpty(form.moving_risk)\r\n\t\t};\r\n\t};\r\n\t\r\n\tEhr.allhash({forms: Ehr.query(baseQuery)}, function (res) {\t});\r\n\treturn results;\r\n}\r\n\r\nfunction processRails(ehrid, baseQuery, results) {\r\n\tvar query = railsAQL;\r\n\tbaseQuery.aql = query.replace(ehrIDReplace, ehrid);\r\n\tbaseQuery.callback = function (out, form) {\r\n\t\tresults.rails = {\r\n\t\t\tcompleted: form.rails_completed,\r\n\t\t\tguidance: getValueOrEmpty(form.rails_guidance)\r\n\t\t};\r\n\t};\r\n\t\r\n\tEhr.allhash({forms: Ehr.query(baseQuery)}, function (res) {\t});\r\n\treturn results;\r\n}\r\n\r\n\r\nfunction compute(ctx, src) {\r\n\tvar ehrid = ctx.vars.ehrId;\r\n\tif(!ehrid) {\r\n\t\tthrow new Error('No EHRID supplied');\r\n\t}\r\n\tvar results = {};\r\n\tvar baseQuery = {\r\n\t\taql: '',\r\n\t\tparams: ctx.vars,\r\n\t\tinitvalue: [],\r\n\t\tcallback: null\r\n\t};\r\n\t\r\n\tvar procs = [processHighRisk, processAboutMe, processBodyMap,\r\n\t\t\t\t\tprocessWaterlow, processDiabetes, processCCP, \r\n\t\t\t\t\tprocessMUST, processFalls, processMoving,\r\n\t\t\t\t\tprocessRails];\r\n\t\t\t\t\t\r\n\tfor(var i = 0; i < procs.length; i++) {\r\n\t\tresults = procs[i](ehrid, baseQuery, results);\r\n\t}\r\n\t\r\n    return results;\r\n}"}]}